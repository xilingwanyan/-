local lp=game.Players.LocalPlayerlocal oldPos=lp.Character.HumanoidRootPart.CFrame;local O=game:GetService("ReplicatedStorage").PlaceStructure.ClientPlacedStructure;local mouse = lp:GetMouse()local MoneyCooldown = falselocal CurrentSlot = game.Players.LocalPlayer:WaitForChild("CurrentSaveSlot").Valuelocal ScriptLoadOrSave = falselocal CurrentlySavingOrLoading = game.Players.LocalPlayer:WaitForChild("CurrentlySavingOrLoading")local moneyaoumt=lp.leaderstats.Cash.Valuelocal bai = { autoaxedupe=false,    cuttreeselect="Generic",    axedupepick=nil,    autodupe=false,    dxmz="",	woodtype=nil,slot=-1,zlwjia="",zix=1,fzbc=false,zlz=3,bringamount=1,bringtree=false,waterwalk=false,awaysday=false,awaysdnight=false,nofog=false,cswjiail=nil,itemset=nil,Tb=nil,ftgnwj="",zdjzwj="",donationRecipient=tostring(game.Players.LocalPlayer),Players = game:GetService('Players'),moneytoplayername="",fzhisy= false,csdaozj=false,loaddupeaxewaittime=3.1,fzwjia=nil,fzcsmt=false,itemstack=1000000000,dropdown={},    }local money=bai.moneytoplayername        local function notify(Title,Text,Duration) -- Sends Notification in the bottom right of the screen        game.StarterGui:SetCore("SendNotification", {            Title = Title;            Text = Text;            Icon = nil;            Duration = Duration        })    end	local function gplr(String)		local Found = {}		local strl = String:lower()		if strl == "all" then			for i,v in pairs(game:GetService("Players"):GetPlayers()) do				table.insert(Found,v)			end		elseif strl == "others" then			for i,v in pairs(game:GetService("Players"):GetPlayers()) do				if v.Name ~= lp.Name then					table.insert(Found,v)				end			end 		elseif strl == "me" then			for i,v in pairs(game:GetService("Players"):GetPlayers()) do				if v.Name == lp.Name then					table.insert(Found,v)				end			end 		else			for i,v in pairs(game:GetService("Players"):GetPlayers()) do				if v.Name:lower():sub(1, #String) == String:lower() then					table.insert(Found,v)				end			end 		end		return Found 	endfunction Dupeaxe()      lp.Character.Humanoid:UnequipTools()    local oldpos = lp.Character.HumanoidRootPart.CFrame    for i,v in pairs(game:service'Players'.LocalPlayer.Backpack:GetChildren()) do       if v.Name == "Tool" then           game:GetService("ReplicatedStorage").Interaction.ClientInteracted:FireServer(v,"Drop tool",game:service'Players'.LocalPlayer.Character.Torso.CFrame * CFrame.new(0,5,0))       end   end   game:service'Players'.LocalPlayer.Character.Head:Destroy()   wait(6)   lp.Character.HumanoidRootPart.CFrame=oldposendlocal Vehiclefunction cartp(cframe)    Vehicle = lp.Character.Humanoid.SeatPart.Parent    spawn(function()        for i = 1, 3 do            task.wait()            Vehicle:SetPrimaryPartCFrame(cframe)        end    end)end  function ItemStackeraxe(ItemType, XAxis, ZAxis)     local Player = game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(0, 3.5, 0)    local Items = {}        for i, v in pairs(game:GetService("Workspace").PlayerModels:GetChildren()) do         if v:FindFirstChild("Owner") and tostring(v.Owner.Value) ==bai.zlwjia          then if (                  v:FindFirstChild 'DraggableItem' and tostring(v.DraggableItem.Parent) == ItemType or v:FindFirstChild 'ItemName' and tostring(v.ItemName.Parent) == ItemType)                  then table                      .                      insert(Items, v)              end          end      end      local Count = 0      for Y = 1, math.ceil(#Items / (XAxis * ZAxis)) do for X = 1, XAxis do for Z = 1, ZAxis do Count = Count                      + 1                  game:GetService("ReplicatedStorage").PlaceStructure.ClientPlacedStructure:FireServer(nil,                      CFrame.new(X * Items[1].Main.Size.X, Y * Items[1].Main.Size.Y, Z * Items[1].Main.Size.Z) + Player                      ,                      game.Players.LocalPlayer, nil, Items[bai.itemstack], true)              end          end      end  end function ItemStackerbox(ItemType, XAxis, ZAxis)     local Player = game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(0, 4, 0)    local Items = {}        for i, v in pairs(game:GetService("Workspace").PlayerModels:GetChildren()) do         if v:FindFirstChild("Owner") and tostring(v.Owner.Value) ==bai.zlwjia          then if (            v:FindFirstChild("PurchasedBoxItemName") and tostring(v.PurchasedBoxItemName.Value)  == ItemType)                  then table                      .                      insert(Items, v)              end          end      end      local Count = 0      for Y = 1, math.ceil(#Items / (XAxis * ZAxis)) do for X = 1, XAxis do for Z = 1, ZAxis do                   game:GetService("ReplicatedStorage").PlaceStructure.ClientPlacedStructure:FireServer(nil,                      CFrame.new(X * Items[1].Main.Size.X, Y * Items[1].Main.Size.Y, Z * Items[1].Main.Size.Z) + Player                      ,                      game.Players.LocalPlayer, nil, Items[bai.itemstack], true)              end          end      end  end local function CheckIfSlotAvailable(Slot)    for a,b in pairs(game.ReplicatedStorage.LoadSaveRequests.GetMetaData:InvokeServer(game.Players.LocalPlayer)) do        if a == Slot then            for c,d in pairs(b) do                if c == "NumSaves" and d ~= 0 then                    return true                else                    return false                end            end        end    endend local function CheckSlotNumber() --Checks if the slot number is right    if bai.slot == "1" or bai.slot == "2" or bai.slot == "3" or bai.slot == "4" or bai.slot == "5" or bai.slot == "6" then        local SlotNumber = tonumber(bai.slot)        return SlotNumber        else return false    endendfunction toolsta(toolname)  return require(game:GetService("ReplicatedStorage").Buyables.Tools.AllTools[toolname].AxeClass).new()end local function tp(pos)  if typeof(pos) == "CFrame" then    lp.Character:SetPrimaryPartCFrame(pos)  elseif typeof(pos) == "Vector3" then    lp.Character:MoveTo(pos)  endendfunction sellwood()for _, Log in pairs(workspace.LogModels:GetChildren()) do    if Log.Name:sub(1, 6) == "Loose_" and Log:findFirstChild("Owner") then        if Log.Owner.Value == game.Players.LocalPlayer then            for i,v in pairs(Log:GetChildren()) do                if v.Name=="WoodSection" then                    spawn(function()                        for i=1,100 do                            wait();							game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(v.WoodSection)game:GetService("ReplicatedStorage").Interaction.ClientIsDraggingX:FireServer(v)                            v.CFrame=CFrame.new(246.8,7.7,321.5)                        end                    end)                end            end                    end    endendendlocal getTool = function()	return lp.Character:FindFirstChild("Tool") or lp.Backpack:FindFirstChild("Tool")  endlocal function cutPart (tool,event, treeClass,axestr)   game:GetService'ReplicatedStorage'.Interaction.RemoteProxy:FireServer(event, {	tool = tool,	faceVector = Vector3.new(0, 0,-1),	height =  0.3,	sectionId = 1,	hitPoints = axestr,	cooldown = -14,	cuttingClass = "Axe"  })endlocal treeListener = function(treeClass, callback)  a= workspace.LogModels.ChildAdded:Connect(function(child)	local owner = child:WaitForChild("Owner")	if owner.Value == lp and child.TreeClass.Value == treeClass then	  a:Disconnect()	  callback(child)	end  end)endlocal getBiggestTree = function(treeClass)    for _,v in next,workspace:children()do        if tostring(v)=="TreeRegion"then            for _,g in next,v:children()do                if g:FindFirstChild("TreeClass")and tostring(g.TreeClass.Value)==treeClass and g:FindFirstChild("Owner")then                     if g.Owner.Value==nil or tostring(g.Owner.Value)==tostring(lp)then                         if #g:children() > 5 and g:FindFirstChild("WoodSection")then                             for h,j in next,g:children() do                                 if j:FindFirstChild("ID")and j.ID.Value==1 and j.Size.Y>.5 then                                     return j;                                end;                            end;                        end;                    end;                end;            end;        end;    end;    return false;endlocal function  lowerBridge(value)    if value=='Higher'then        for _,v in pairs(game.workspace.Bridge.VerticalLiftBridge.Lift:GetChildren()) do            v.CFrame = v.CFrame + Vector3.new(0, 26, 0)            end                elseif value=='Lower'then        for _,v in pairs(game.workspace.Bridge.VerticalLiftBridge.Lift:GetChildren()) do            v.CFrame = v.CFrame + Vector3.new(0, -26, 0)            end    end;    end	function gettool(treeClass)		local tool	local tools=0			local damage	local axes={};	for _,v in pairs(lp.Backpack:children())do        table.insert(axes,v);		tools=tools+1    end;    for _,v in pairs(lp.Character:children())do        if v:IsA'Tool'then             table.insert(axes,v);			tools=tools+1        end;    end	if tools==0 then		return 		notify("白","你需要斧头",4)	end	for _,v in next,axes do        if v:FindFirstChild'ToolName'and game:GetService("ReplicatedStorage").Buyables.Tools.AllTools:FindFirstChild(tostring(v.ToolName.Value))then 			            stats=toolsta(v.ToolName.Value)            if stats.SpecialTrees then                 if stats.SpecialTrees[treeClass]then                     damage=stats.SpecialTrees[treeClass].Damage					tool=v;                    return tool;                end;            end;            damage=stats.Damage		            if damage>0 then                 tool=v;            end;        end;    end;	return toolend   function modwood()	local wood	local Saw	notify("自动加工", "请点击一颗树", 4)	local ModTree =	mouse.Button1Up:Connect(function()		local obj = mouse.Target.Parent			if not obj:FindFirstChild "RootCut" and obj.Parent.Name == "TreeRegion" then				return notify("错误!", "这棵树还没有砍!", 3)			end			if obj:FindFirstChild "Owner" and obj.Owner.Value == lp and obj:FindFirstChild "WoodSection" then				wood = obj			   notify("一键加工", "已选择树!", 3)			end			if obj.Name:find('Sawmill')then					Saw=sawmill;					notify('白','剧木机已选择',4)				elseif obj.Parent.Name:find('Sawmill')or obj.Parent:FindFirstChild'BlockageAlert'then 					Saw=obj.Parent					notify('白','剧木机已选择',4)				end;			end			)			repeat				task.wait(.01)			until wood and Saw ~= nil			ModTree:Disconnect()			ModTree = nil			local SawC = Saw.Particles.CFrame + Vector3.new(0.7, 0)			local cu,cw= 0,nil		   for p, I in next, wood:GetChildren() do			if I.Name == "WoodSection" then				if I.ID.Value > cu then					cu = I.ID.Value					cw=I				end			end		end			for p, I in next, wood:GetChildren() do				if I.Name == "WoodSection" then					  					for p, b in next, I.ChildIDs:GetChildren() do											if b.Value ==cu then							cv = I						  						end					end				end			end			tp(cv.CFrame)			wait()						repeat task.wait()				game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(cv)				game:GetService("ReplicatedStorage").Interaction.ClientIsDraggingX:FireServer(cv)				firetouchinterest(cv,game.Workspace['Region_Volcano'].Lava.Lava,0);				firetouchinterest(cv,game.Workspace['Region_Volcano'].Lava.Lava,1);			until cv:FindFirstChild('LavaFire');			cv:FindFirstChild('LavaFire'):Destroy();	tp(cw.CFrame)	for i=1,20 do		game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(cw)		game:GetService("ReplicatedStorage").Interaction.ClientIsDraggingX:FireServer(cw)		task.wait()				cw.CFrame=SawC				end   endlocal function bringTree(treeClass)        local oldPos=lp.Character.HumanoidRootPart.CFrame;        local tool		tool=gettool(treeClass)				local axestr=toolsta(tool.ToolName.Value)	if axestr.SpecialTrees and axestr.SpecialTrees[treeClass] then		for i, v in next, axestr.SpecialTrees[treeClass] do			axestr[i] = v		end	  end  local tree = getBiggestTree(treeClass)     if not tree then	return notify("白","没有找到树",4)  end    local treeCut = falseif treeClass=="LoveCave" and axestr.Damage<10000000 then    return notify("白","你没有合适的斧头去砍这棵树")    end                              workspace.Camera.CameraSubject = tree  treeListener(treeClass, function(tree)	tree.PrimaryPart = tree:FindFirstChild("WoodSection")	treeCut = truewait()workspace.Camera.CameraSubject = lp.Character	for i=1,20 do		game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(tree)		game:GetService("ReplicatedStorage").Interaction.ClientIsDraggingX:FireServer(tree)		tree:SetPrimaryPartCFrame(oldPos)game:GetService("RunService").Heartbeat:wait();endend)    task.wait()      repeat       cutPart(tool,tree.Parent.CutEvent, treeClass,axestr.Damage)     wait()    until treeCut	  endfunction tpitems(name)	local plr = bai.cswjia	local StealType = name	for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do		if v:FindFirstChild("Owner") and tostring(v.Owner.Value) == plr then			if StealType ~= "TreeClass" then				if v:FindFirstChild("Type") and tostring(v.Type.Value) == StealType then					if v.PrimaryPart then						game:GetService("ReplicatedStorage").PlaceStructure.ClientPlacedStructure:FireServer(nil,bai.itemset,lp, nil, v, true)					end			end			else							if v:FindFirstChild("TreeClass") then					if v.WoodSection then																	spawn(function()									for i=1 ,20 do							game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(v)							game:GetService("ReplicatedStorage").Interaction.ClientIsDraggingX:FireServer(v)													game:GetService('RunService').Stepped:wait();						end						v.WoodSection.CFrame=  bai.itemset						end)						task.wait()														end					end																	end		end			endnotfy("白","完成",4)enddelete=function(V, P)	if P==nil then 	game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(V:FindFirstChildOfClass("Part"))	game:GetService("ReplicatedStorage").Interaction.ClientIsDraggingX:FireServer(v)end;	game.ReplicatedStorage.Interaction.DestroyStructure:FireServer(V)	end; 	local getTool = function()		return lp.Character:FindFirstChild("Tool") or lp.Backpack:FindFirstChild("Tool")	  end	  	  local getHumanoidRootPart = function(player)		local player = player or lp		if not player.Character then		  return nil		end		return player.Character:FindFirstChild("HumanoidRootPart")	  end	  	  local attachPlayer = function(player, kick)		local tool = getTool()		if not tool then		  return warn("No tool found.")		end		local character, targetCharater = lp.Character, player.Character		local humanoid = lp.Character:FindFirstChildOfClass("Humanoid", true)		local humanoidRootPart, targetHumanoidRootPart = getHumanoidRootPart(), getHumanoidRootPart(player)		local newHumanoid = humanoid:Clone()		humanoid.Name = "1"		newHumanoid.Parent = character		newHumanoid.Name = "Humanoid"		wait()		humanoid:Destroy()		workspace.CurrentCamera.CameraSubject = character		newHumanoid.DisplayDistanceType = "None"		tool.Parent = character		humanoidRootPart.CFrame = targetHumanoidRootPart.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)		if kick then tool.Owner.Parent = nil; wait(0.2) end		local iterationCount = 0		repeat		  iterationCount = iterationCount + 1		  humanoidRootPart.CFrame = targetHumanoidRootPart.CFrame		  wait(0.1)		until (tool.Parent ~= character or not humanoidRootPart or not targetHumanoidRootPart or not humanoidRootPart.Parent or not targetHumanoidRootPart.Parent or iterationCount > 250) and iterationCount > 2	  end	  	  local refreshPlayer = function()		respawningPlayer = true		local humanoid = lp.Character and lp.Character:FindFirstChildOfClass("Humanoid", true)		local position1, position2 = humanoid and humanoid.RootPart and humanoid.RootPart.CFrame, workspace.CurrentCamera.CFrame		local character = lp.Character		if character:FindFirstChild("Head") then		  character.Head:Destroy()		end		task.spawn(function()		  lp.CharacterAdded:Wait():WaitForChild("Humanoid").RootPart.CFrame, workspace.CurrentCamera.CFrame = position1, wait() and position2		end)	  end	  	  local attachToPlayer = function(player, inLoop, kick)		local inLoop = inLoop or function() end		if not player then return end		if not getTool() then return Notify("白", "请你拿上斧头", 3) end		local oldPosition = getHumanoidRootPart().CFrame		refreshPlayer()		wait()		lp.CharacterAdded:Wait()		repeat wait() until getHumanoidRootPart()		wait(0.1)		local humanoidRootPart = getHumanoidRootPart()		attachPlayer(player, kick)		repeat		  pcall(inLoop)		  wait()		until not getHumanoidRootPart(player) or not getHumanoidRootPart() or wait(3)		wait(1)		repeat wait() until getHumanoidRootPart()		wait(3)		getHumanoidRootPart().CFrame = oldPosition 	  end	  	  local kickPlayer = function(player)		attachToPlayer(player, nil, true)	  endfunction CanClientLoad()	if not game:GetService "ReplicatedStorage".LoadSaveRequests.ClientMayLoad:InvokeServer(lp) then	   notify("白","等待加载时间,请耐心的等待",4)	   repeat		  game:GetService"RunService".Stepped:wait()	   until game:GetService "ReplicatedStorage".LoadSaveRequests.ClientMayLoad:InvokeServer(lp)	end	return true endfunction GetLoadedSlot()	return lp.CurrentSaveSlot.Value endfunction getPlayersBase(plr)    for i,v in next,workspace.Properties:children()do         if v:IsA('Model')and tostring(v.Owner.Value)==plr then             return v;        end;    end;    return false;end; function LoadSlot(slot)	local CheckLoad	spawn(	function()	   CheckLoad = game:GetService('ReplicatedStorage').LoadSaveRequests.ClientMayLoad:InvokeServer(lp)	   if not CheckLoad then		  repeat            task.wait()		  until CheckLoad	   end	   game:GetService('ReplicatedStorage').LoadSaveRequests.RequestLoad:InvokeServer(slot, lp)      	   return slot	end)endfunction SaveSlot()    game:GetService"ReplicatedStorage".LoadSaveRequests.RequestSave:InvokeServer(GetLoadedSlot(), lp) end function dupeitemstoplayer(playername)	local baseCFrame = nil	for _,v1 in pairs (game.Workspace.Properties:GetChildren()) do		if tostring(v1.Owner.Value) == tostring(playername) then			baseCFrame = v1.OriginSquare.CFrame			break		end	end	if baseCFrame == nil then		notify("白", "选择的玩家没有加载",3)		return	end	autoDupeTo = game.Players[tostring(playername)]	if not game:GetService("ReplicatedStorage").Interaction.ClientIsWhitelisted:InvokeServer(autoDupeTo) then		notify("白", "这个玩家需要给你白名单",3)		return	end	if not lp.WhitelistFolder:FindFirstChild(tostring(autoDupeTo)) then		notify("白", "正在给 "..tostring(autoDupeTo).."白名单",3)		game.ReplicatedStorage.Interaction.ClientSetListPlayer:InvokeServer(lp.WhitelistFolder, autoDupeTo, true)	end	if lp.CurrentSaveSlot.Value < 1 then		notify("白", "请你加载存档",3)		return	end	for _,v in pairs (workspace.PlayerModels:GetChildren()) do 		if v:FindFirstChild('Owner') and v.Owner.Value==lp then 						if v:FindFirstChild('Main')then 					if v:FindFirstChild('PurchasedBoxItemName')or v:FindFirstChild('ToolName')or v:FindFirstChild('BoxItemName')or v:FindFirstChild('ItemName') then						game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(nil, baseCFrame,lp, nil, v, true)						wait();				 					end;			end;		end;    	end;	notify("白","即将加载存档",4)	CanClientLoad()	wait(1)	game.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(lp.CurrentSaveSlot.Value, lp)	notify("白","完成",4) end function shuaxinlb(zji)bai.dropdown={}if zji==true thenfor p, I in next,game.Players:GetChildren() dotable.insert(bai.dropdown, I.Name)endelsefor p, I in next, game.Players:GetChildren() doif I ~= lp thentable.insert(bai.dropdown, I.Name)endendendendshuaxinlb(true)local bailib = loadstring(game:HttpGethttps://pastebin.com/raw/DW3eJwe6")()local win = bailib:new("白--伐木大亨4")local Tab1 = win:Tab("玩家功能", "10882439086")local Section3 = Tab1:section("玩家")local Tab = win:Tab("主要功能", "10728953248")local Section = Tab:section("斧头")local Section1 = Tab:section("基地")local Sectionfzhi = Tab:section("复制")local Sectionchuanson = Tab:section("传送东西")local Sectionzhengli = Tab:section("整理")local Section5 = Tab:section("木头")local Tab2 = win:Tab("环境", "4626047596")local Sectionhuanjin = Tab2:section("环境")local Tab3 = win:Tab("自动建造", "4034483344")local Sectionzidongjianzao = Tab3:section("自动建造")local Sectionfutougn = Tab3:section("斧头功能")Section3:Slider('设置速度', 'Sliderflag', 16, 16, 600,false, function(s)	bai.walkspeed=s		spawn(function()			while task.wait() do		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = bai.walkspeed	end	end)end)Section3:Slider('设置跳跃', 'Sliderflag', 50, 50, 600,false, function(s)bai.JumpPower=s		spawn(function()			while task.wait() do		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = bai.JumpPower	endend)end)Section3:Slider('设置高度', 'Sliderflag', 1, 1, 1000,false, function(s)    lp.Character.Humanoid.HipHeight=send)Section3:Button("飞行", function()	loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()end)Section:Button("复制斧头", function()    Dupeaxe()end)Section:Button("扔掉所有斧头", function()    for i,v in pairs(game:service'Players'.LocalPlayer.Backpack:GetChildren()) do        if v.Name == "Tool" then            game:GetService("ReplicatedStorage").Interaction.ClientInteracted:FireServer(v,"Drop tool",game:service'Players'.LocalPlayer.Character.Torso.CFrame * CFrame.new(0,5,0))        end    endend)Section:Button("捡斧头", function()    for a,b in pairs(workspace.PlayerModels:GetChildren()) do        if b:FindFirstChild("Owner") and b.Owner.Value == lp then          if b:FindFirstChild("Type") and b.Type.Value == "Tool" then          game:GetService('ReplicatedStorage').Interaction.ClientInteracted:FireServer(b,'Pick up tool')	          task.wait()                  end        end          endend)Section:Toggle("自动复制斧头",'Toggleflag',false,function(state)	if state then		bai.autoaxedupe=true        	while bai.autoaxedupe ==true do          Dupeaxe()        endelse     bai.autoaxedupe=falseendend)Section:Button("如何食用加载复制斧头", function()	notlfy("白", "默认死亡时间为3.1秒，如果卡在加载界面就增加时间,如果斧头被保存了就减少时间,加减推荐是在3.1的基础上来,推荐加减时间为0.1秒", "好")end)Section:Textbox("死亡后多长时间加载",'Toggleflag',"输入数字",function(txt)	bai.loaddupeaxewaittime=txtend)Section:Button("获取当前死亡后加载时间", function()	notlfy("白", " 时间为"..bai.loaddupeaxewaittime.."秒", "好")end)Section:Button("保存当前死亡后加载的时间", function()	writefile("白斧头复制时间.txt", bai.loaddupeaxewaittime)end)Section:Button("读取保存后加载的时间", function()	local dupeaxetime = isfile("白斧头复制时间.txt")		if dupeaxetime==true then			local contents = readfile("白斧头复制时间.txt")			bai.loaddupeaxewaittime=contents 		else			bailib:Notification("白", "你还没有保存或是把文件删除了", "好")		endend)Section:Button("加载复制斧头", function()	CanClientLoad()		wait(1)		lp.Character.Head:Destroy()		wait(bai.loaddupeaxewaittime)		LoadSlot(GetLoadedSlot())		wait(6)lp.Character.HumanoidRootPart.CFrame=oldposend)Section:Button("加载复制斧头", function()	CanClientLoad()		wait(1)		lp.Character.Head:Destroy()		LoadSlot(GetLoadedSlot())		wait(6)lp.Character.HumanoidRootPart.CFrame=oldPosend)Section1:Textbox("加载基地数字",'TextBoxfalg',"输入数字",function(s)	bai.slot=send)Section1:Button("加载（不保存当前基地）", function()     ScriptLoadOrSave = true    local CheckSlot = CheckSlotNumber()    if CheckSlot ~= false then        if CheckIfSlotAvailable(CheckSlot) == true then            local LoadSlot = game.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(CheckSlot)            if LoadSlot == false then                notify("白", "现在不能加载!", 1)            end            if LoadSlot == true then                notify("白", "已加载!", 2)                CurrentSlot = CheckSlot            end        else            notify("白", "貌似不工作了", 2)        end    else        notify("白", "请你填数字☹️", 2)    end    ScriptLoadOrSave = falseend)Section1:Button("保存", function()    local CheckSlot = CheckSlotNumber()    if CheckSlot ~= false then        if CurrentSlot ~= -1 then            ScriptLoadOrSave = true            local SaveSlot = game.ReplicatedStorage.LoadSaveRequests.RequestSave:InvokeServer(CheckSlot)            if SaveSlot == true then                notify("白", "已保存 ✅", 2)                wait(.5)                ScriptLoadOrSave = false            elseif SaveSlot == false then                notify("白", "保存成功!", 1)                wait(.5)                ScriptLoadOrSave = false            end        else            notify("白", "错误会不会弄!", 1)        end    else        notify("白", "你会不会填!", 1)    endend)Sectionfzhi:Button("自我复制", function()	local GS=function(...) return game:GetService(...) end	 local ReplicatedStorage,Manager=GS'ReplicatedStorage',GS'VirtualInputManager'			ZWFZ=function()   	ReplicatedStorage.Interaction.ClientSetListPlayer:InvokeServer(lp.WhitelistFolder, lp, true)	local CanLoad=ReplicatedStorage.LoadSaveRequests.ClientMayLoad:InvokeServer()	if CanLoad then        spawn(function()	ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(lp.CurrentSaveSlot.Value, Player)	ReplicatedStorage.Interaction.ClientSetListPlayer:InvokeServer(lp.WhitelistFolder, lp, false)           local newPlot;        repeat wait()newPlot=getPlayersBase(tostring(lp));until newPlot;        newPlot=newPlot.OriginSquare;        tp(CFrame.new(newPlot.CFrame.p+Vector3.new(0,10,0)))		for _,v in pairs (workspace.PlayerModels:GetChildren()) do             if v:FindFirstChild('Owner') and v.Owner.Value==lp then                                 if v:FindFirstChild('Main')then                                        if (v.Main.CFrame.p-newPlot.CFrame.p).Magnitude>150 then                                                 if v:FindFirstChild('PurchasedBoxItemName')or v:FindFirstChild('ToolName')or v:FindFirstChild('BoxItemName')or v:FindFirstChild('ItemName') then                            game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(nil, CFrame.new(newPlot.CFrame.p+Vector3.new(4,1,4)),lp, nil, v, true)                    wait()                        end;                    end;                elseif v:FindFirstChild('WoodSection')then 					if bai.fzcsmt==true then						if (v.WoodSection.CFrame.p-newPlot.CFrame.p).Magnitude>150 then 							                        tp(v.WoodSection.CFrame)			spawn(function()			for i=1 ,20 do	game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(v)	game:GetService("ReplicatedStorage").Interaction.ClientIsDraggingX:FireServer(v)	game:GetService('RunService').Stepped:wait();endv.WoodSection.CFrame= CFrame.new(newPlot.CFrame.p+Vector3.new(4,1,4))end)task.wait()							end;						end;					end				end                     end;		wait(5)		if bai.fzbc==true then			for i=1,3 do                SaveSlot()                   task.wait(2)		end	end        end)    	lp.PlayerGui.Chat.Frame.Visible=false    spawn(function()        if bai.fzhisy==true then        for i, v in pairs(game:GetService("Workspace").Properties:GetChildren()) do            if v:FindFirstChild("Owner") and v.Owner.Value == game.Players.LocalPlayer then                base = v                square = v.OriginSquare                end            end        function makebase(pos)            local Event = game:GetService("ReplicatedStorage").PropertyPurchasing.ClientExpandedProperty            Event:FireServer(base, pos)            end        spos = square.Position        makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z))        makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z))        makebase(CFrame.new(spos.X, spos.Y, spos.Z + 40))        makebase(CFrame.new(spos.X, spos.Y, spos.Z - 40))        makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z + 40))        makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z - 40))        makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z + 40))        makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z - 40))        makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z))        makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z))        makebase(CFrame.new(spos.X, spos.Y, spos.Z + 80))        makebase(CFrame.new(spos.X, spos.Y, spos.Z - 80))    --Corners--        makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z + 80))        makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z - 80))        makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z + 80))        makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z - 80))    --Corners--        makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z + 80))        makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z + 80))        makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z + 40))        makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z - 40))        makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z + 40))        makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z - 40))        makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z - 80))        makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z - 80))        end        end)spawn (function()	repeat	task.wait()	until lp.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible==true	wait(0.2)	Manager:SendKeyEvent(true,"E",false,game)	repeat	wait(0.1)	until lp.PlayerGui.PropertyPurchasingGUI.ConfirmPurchase.Visible==true	wait(1.2)	Manager:SendKeyEvent(true,"E",false,game)    end)	       		end         	end    	if not ReplicatedStorage.LoadSaveRequests.ClientMayLoad:InvokeServer(ren) then				notify("白", "请等待，能够加载的时候自动会加载的", 3)				repeat					wait(5)				until ReplicatedStorage.LoadSaveRequests.ClientMayLoad:InvokeServer(ren)			end;					notify("白", "开始自我复制......", 10)						notify("白 ", "如果卡住请大退游戏", 10)								            if bai.csdaozj==true then            local newPlot;          newPlot=getPlayersBase(tostring(lp))            newPlot=newPlot.OriginSquare;                      for _,v in pairs (workspace.PlayerModels:GetChildren()) do                 if v:FindFirstChild('Owner') and v.Owner.Value==lp then                                         if v:FindFirstChild('Main')then                             if v:FindFirstChild('PurchasedBoxItemName')or v:FindFirstChild('ToolName')or v:FindFirstChild('BoxItemName')or v:FindFirstChild('ItemName') then                                game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(nil, CFrame.new(newPlot.CFrame.p+Vector3.new(4,1,4)),lp, nil, v, true)                                wait();                                                     end;                    end;                end;                end;        end        wait(2)	ZWFZ()	end)    Sectionfzhi:Toggle("传送东西到中间",'Toggleflag',false,function(state)	if state then		bai.csdaozj=true else     bai.csdaozj=falseendend)Sectionfzhi:Toggle("复制完传送木头",'Toggleflag',false,function(state)	if state then		bai.fzcsmt=true else 	bai.fzcsmt=falseendend)Sectionfzhi:Toggle("复制所有东西",'Toggleflag',false,function(state)	if state then		bai.fzhisy=trueelse     bai.fzhisy=falseendend)Sectionfzhi:Toggle("复制好后自动保存",'Toggleflag',false,function(state)	if state then		bai.fzbc=trueelse     bai.fzbc=falseendend)local Players = Sectionfzhi:Dropdown("选择玩家",'Dropdown',bai.dropdown,function(v)	bai.fzwjia= vend)Sectionfzhi:Button('重置玩名称',function()	shuaxinlb(true)	Players:SetOptions(bai.dropdown)end)Sectionfzhi:Button("开始复制",  function()dupeitemstoplayer(bai.fzwjia)end)Section1:Button("资金复制", function()	local canload=false if MoneyCooldown == true thennotify("白", "请等待，能够加载的时候自动会加载的", 3)        return    elseif MoneyCooldown == false then        MoneyCooldown = true        CanClientLoad()		wait(1)       notify("白", "复制中", 5)        wait(1)       spawn(function()		        game.ReplicatedStorage.Transactions.ClientToServer.Donate:InvokeServer(lp, game.Players.LocalPlayer.leaderstats.Cash.Value, lp.CurrentSaveSlot.Value)       wait(1)        MoneyCooldown = false    end)		task.wait(4)					            game.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(lp.CurrentSaveSlot.Value, lp)            for i=1,3 do                SaveSlot()                   task.wait(2)		end                  wait(1)                  notify("白", "刷钱成功", 3)                                      end         end)Section1:Button("免费土地", function()	for a,b in pairs(workspace.Properties:GetChildren()) do 		if b:FindFirstChild("Owner") and b:FindFirstChild("OriginSquare") and b.Owner.Value == nil then 			game.ReplicatedStorage.PropertyPurchasing.ClientPurchasedProperty:FireServer(b, b.OriginSquare.OriginCFrame.Value.p + Vector3.new(0,3,0))			wait(0.5)			Instance.new('RemoteEvent', game:service'ReplicatedStorage'.Interaction).Name = "Ban"			for i,v in pairs(game.Workspace.Properties:GetChildren()) do				if v.Owner.Value == game.Players.LocalPlayer then					game.Players.LocalPlayer.Character.Humanoid.Jump = true					wait(0.1)					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame + Vector3.new(0,10,0)					game.Players.LocalPlayer.Character.Humanoid.Jump = true					wait(0.1)				end			end		end	endend)Section1:Button("最大土地", function()    for i, v in pairs(game:GetService("Workspace").Properties:GetChildren()) do        if v:FindFirstChild("Owner") and v.Owner.Value == game.Players.LocalPlayer then            base = v            square = v.OriginSquare            end        end    function makebase(pos)        local Event = game:GetService("ReplicatedStorage").PropertyPurchasing.ClientExpandedProperty        Event:FireServer(base, pos)        end    spos = square.Position    makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z))    makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z))    makebase(CFrame.new(spos.X, spos.Y, spos.Z + 40))    makebase(CFrame.new(spos.X, spos.Y, spos.Z - 40))    makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z + 40))    makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z - 40))    makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z + 40))    makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z - 40))    makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z))    makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z))    makebase(CFrame.new(spos.X, spos.Y, spos.Z + 80))    makebase(CFrame.new(spos.X, spos.Y, spos.Z - 80))--Corners--    makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z + 80))    makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z - 80))    makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z + 80))    makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z - 80))--Corners--    makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z + 80))    makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z + 80))    makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z + 40))    makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z - 40))    makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z + 40))    makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z - 40))    makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z - 80))    makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z - 80))end)Section1:Button("免费获得所有蓝图", function()    for i,v in pairs(game.ReplicatedStorage.Purchasables.Structures.BlueprintStructures:GetChildren()) dolocal clone = v:Clone()clone.Parent = game.Players.LocalPlayer.PlayerBlueprints.Blueprintsendend)local Players = Sectionchuanson:Dropdown("选择玩家",'Dropdown',bai.dropdown,function(v)    bai.cswjia= vend)Sectionchuanson:Button("重置玩家名称", function()	shuaxinlb(true)	Players:SetOptions(bai.dropdown)end)local Players = Sectionzhengli:Dropdown("选择玩家",'Dropdown',bai.dropdown,function(v)    bai.zlwjia= vend)Sectionchuanson:Button("设置传送点", function()	pcall(function()		workspace.baiBasedropCord:Destroy();		bai.itemset=nil	end)	local baiBasedropCord=Instance.new('Part')		baiBasedropCord.Name='baiBasedropCord';		baiBasedropCord.Anchored=true;			baiBasedropCord.Parent=game.Workspace;	baiBasedropCord.Shape=Enum.PartType.Ball;	baiBasedropCord.Size=Vector3.new(2,2,2)	baiBasedropCord.Color=Color3.fromRGB(0, 217, 255);	baiBasedropCord.Material=Enum.Material.ForceField;	baiBasedropCord.CFrame=lp.Character.HumanoidRootPart.CFramebai.itemset=lp.Character.HumanoidRootPart.CFrameend)Sectionchuanson:Button("删除传送点", function()	pcall(function()		workspace.baiBasedropCord:Destroy();		bai.itemset=nil	end)	end)Sectionchuanson:Button("传送东西", function()	tpitems("Loose Item")	end)Sectionchuanson:Button("传送斧头", function()tpitems("Tool")end)Sectionchuanson:Button("传送家具", function()	tpitems("Furniture")		end)Sectionchuanson:Button("传送礼物", function()	tpitems("Gift")	end)Sectionchuanson:Button("传送木板", function()		tpitems("TreeClass")	end)Sectionzhengli:Button("重置玩家名称", function()	shuaxinlb(true)	Players:SetOptions(bai.dropdown)end)Sectionzhengli:Textbox("x轴",'TextBoxfalg',"输入数字",function(txt)	bai.zix=txtend)Sectionzhengli:Textbox("z轴",'TextBoxfalg',"输入数字",function(txt)	bai.zlz=txtend)Sectionzhengli:Textbox("整理数量",'TextBoxfalg',"输入数字",function(txt)	bai.itemstack=txtend)Sectionzhengli:Button("获取整理工具", function()	Identify = Instance.new("Tool")		Identify.RequiresHandle = false;		Identify.Name = "点击要整理的物品"		Identify.Activated:connect(function()            if mouse.Target.Parent:FindFirstChild("PurchasedBoxItemName") then                bai.dxmz=mouse.Target.Parent.PurchasedBoxItemName.Value                     ItemStackerbox(bai.dxmz,bai.zix, bai.zlz)             elseif mouse.Target.Parent:FindFirstChild("ItemName") then                bai.dxmz=mouse.Target.Parent.ItemName.Value                ItemStackeraxe(bai.dxmz,bai.zix, bai.zlz)             end            end)		Identify.Parent = game.Players.LocalPlayer.Backpackend)Section5:Button("传送木头", function()	local oldPosition = lp.Character.HumanoidRootPart.Position    for _, Log in pairs(game.Workspace.LogModels:GetChildren()) do        if Log.Name:sub(1, 6) == "Loose_" and Log:findFirstChild("Owner") then            if Log.Owner.Value == game.Players.LocalPlayer then                tp(Log.WoodSection.CFrame)                for i=1,10 do					game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(Log.WoodSection)					game:GetService("ReplicatedStorage").Interaction.ClientIsDraggingX:FireServer(Log)					Log:MoveTo(oldPosition)                    game:GetService('RunService').Stepped:wait();                end				tp(oldPosition)            end        end    end	end)Section5:Button("卖木头", function()sellwood()end)Section5:Toggle("拖拽器",'Toggleflag',false,function(state)	if state then		workspace.ChildAdded:connect(function(Dragger)			if tostring(Dragger)=='Dragger'then				local BodyGyro=Dragger:WaitForChild'BodyGyro';				local BodyPosition=Dragger:WaitForChild'BodyPosition';				repeat game:GetService'RunService'.Stepped:wait()until workspace:FindFirstChild'Dragger';			   					BodyPosition.P=120000;					BodyPosition.D=1000;					BodyPosition.maxForce=Vector3.new(1,1,1)*1000000;					BodyGyro.maxTorque=Vector3.new(1,1,1)*200;					BodyGyro.P=1200;					BodyGyro.D=140;			   			end		end)	else	workspace.ChildAdded:connect(function(Dragger)if tostring(Dragger)=='Dragger'thenlocal BodyGyro=Dragger:WaitForChild'BodyGyro';local BodyPosition=Dragger:WaitForChild'BodyPosition';repeat game:GetService'RunService'.Stepped:wait()until workspace:FindFirstChild'Dragger';BodyPosition.P=10000;BodyPosition.D=800;BodyPosition.maxForce=Vector3.new(17000,17000,17000);BodyGyro.maxTorque=Vector3.new(200,200,200);BodyGyro.P=1200;BodyGyro.D=140;end;end)	endend)Section5:Dropdown("选择树",'Dropdown',{'泰坦木',"普通树","沼泽黄金", "樱花", "蓝木", "冰木", "火山木", "橡木", "巧克力木", "白桦木", "黄金木", "雪地松", "僵尸木", "大巧克力树", "椰子树",'粉木','煤炭幻影','黑木','粉色巧克力树','岩浆椰子树','幽灵木','大幽灵木','蓝光椰子树','爬行者树','幻影树','粉色大幽灵木','蓝色大理石幻影','人脸木','太空椰子木','糖果木'},function(b)	if b=='普通树'then		bai.cuttreeselect="Generic"	elseif b=='沼泽黄金'then		bai.cuttreeselect="GoldSwampy"	elseif b=='樱花'then		bai.cuttreeselect="Cherry"	elseif b=='蓝木'then		bai.cuttreeselect="CaveCrawler"	elseif b=='冰木'then		bai.cuttreeselect="lcer"	elseif b=='火山木'then		bai.cuttreeselect="Volcano"	elseif b=='橡木'then		bai.cuttreeselect="Oak"	elseif b=='巧克力木'then		bai.cuttreeselect="Walnut"	elseif b=='白桦木'then		bai.cuttreeselect="Birch"	elseif b=='黄金木'then		bai.cuttreeselect="SnowGlow"	elseif b=='雪地松'then		bai.cuttreeselect="Pine"		elseif b=='僵尸木'then		bai.cuttreeselect="GreenSwampy"	elseif b=='椰子树'then		bai.cuttreeselect="Palm"	elseif b=='粉木'then		bai.cuttreeselect="NoraPink"	elseif b=='煤炭幻影'then		bai.cuttreeselect="Tobu2"	elseif b=='黑木'then		bai.cuttreeselect="Valen"	elseif b=='粉色巧克力树'then		bai.cuttreeselect="Koa"	elseif b=='岩浆椰子树'then		bai.cuttreeselect="Volcano2"                elseif b=='幽灵木'then		bai.cuttreeselect="Spooky"                elseif b=='大幽灵木'then		bai.cuttreeselect="SpookyBig"                elseif b=='蓝光椰子树'then                                bai.cuttreeselect="WinterTree"                elseif b=='爬行者树'then                                bai.cuttreeselect="SpaceSubstanceTree"                elseif b=='幻影树'then		bai.cuttreeselect="LoneCave"                elseif b=='粉色大幽灵木'then		bai.cuttreeselect="GloomyBig"                elseif b=='蓝色大理石幻影'then		bai.cuttreeselect="WinterHell"                elseif b=='人脸木'then		bai.cuttreeselect="MrTree"                elseif b=='太空椰子木'then		bai.cuttreeselect="Greenish"                elseif b=='糖果木'then		bai.cuttreeselect="CandyCane"	elseif b=='泰坦木'then		bai.cuttreeselect="TitanTree"				endend)Section5:Textbox("带来树的数量",'TextBoxfalg',"输入数字",function(txt)	bai.bringamount=txtend)Section5:Button("带来树", function()	bai.bringtree=true	for i=1 , bai.bringamount do		if bai.bringtree==true then			task.wait()			bringTree(bai.cuttreeselect)			end   	end	end)Section5:Button("停止", function()	bai.bringtree=false    workspace.Camera.CameraSubject = lp.Characterend)Section5:Button("处理树", function()modwood()end)Section5:Button("传送到空岛",function(txt)	lp.Character.HumanoidRootPart.CFrame=CFrame.new(4029,175,3658)end)Sectionhuanjin:Toggle("终日白天",'Toggleflag',false, function(state)	if state then 		bai.awaysday=true		while task.wait() do		if bai.awaysday==true then 			game:GetService('Lighting').TimeOfDay=('12:00:00');		end	endelse bai.awaysday=false	end	end)Sectionhuanjin:Toggle("终日黑天",'Toggleflag',false,  function(state)	if state then 		bai.awaysdnight=true		while task.wait() do		if bai.awaysdnight==true then 			game:GetService('Lighting').TimeOfDay=('2:00:00');		end	end	else        bai.awaysdnight=false    endend)game:GetService("Lighting").GlobalShadows =trueSectionhuanjin:Toggle("消除阴影",'Toggleflag',false, function(state)		if state then			game:GetService("Lighting").GlobalShadows=false		else			game:GetService("Lighting").GlobalShadows=true		endend)Sectionhuanjin:Button("删除灵视神殿的石头",  function()	workspace.Region_Mountainside.BoulderRegen.Boulder:Destroy()	workspace.Region_Mountainside.Door.Door:Destroy()end)Sectionhuanjin:Toggle("删除岩浆",'Toggleflag',false,function(state)	for i,v in pairs(game.Workspace.Region_Volcano:GetDescendants()) do		if v.Name == "TouchInterest" then		  v:Destroy()		elseif v.Name == "Lava" then		  for n,k in pairs(v:GetChildren()) do			if k:IsA("Part") then			  if state == true then				k.Transparency = 1			  else				k.Transparency = 0			  end			end		  end		end	  endend)Sectionhuanjin:Toggle("删除水",'Toggleflag',false,function(state)	for _,v in pairs(game.Workspace.Water:GetChildren()) do		if v.Name == "Water" then		  if state then			v.Transparency = 1;		  else			v.Transparency = 0;		  end		end	  endend)Sectionhuanjin:Toggle("去除雾",'Toggleflag',false, function(state)	if state then 		bai.nofog=true		while task.wait() do		if bai.nofog==true then 	game:GetService('Lighting').FogEnd=1000000;		end	endelse bai.nofog=false	endend)Sectionhuanjin:Toggle("水上行走",'Toggleflag',false, function(state)	for i,v in next,game.workspace.Water:children()do		if v.ClassName=='Part'then			bai.waterwalk,v.CanCollide=state,state;		end;	end;	for i,v in next,game:GetService('Workspace').Bridge.VerticalLiftBridge.WaterModel:children()do 		if v:IsA('BasePart')then 			v.CanCollide=state;		end;	end;end)local Players = Sectionzidongjianzao:Dropdown("选择自动建造的玩家",'Dropdown',bai.dropdown,function(v)    bai.zdjzwj= vend)Sectionzidongjianzao:Button("重置玩家名称", function()	shuaxinlb(true)	Players:SetOptions(bai.dropdown)end)Sectionzidongjianzao:Button("一键删除建筑",  function()	for _, v in pairs(workspace.PlayerModels:GetChildren()) do		if v:FindFirstChild("Owner") and v:FindFirstChild("MainCFrame") and v:FindFirstChild("Type") then			 if v.Owner.Value == lp and v.Type.Value == "Structure" then 				delete(v) 			end 		end 	endend)Sectionzidongjianzao:Toggle("自动填充蓝图",'Toggleflag',false,function(bool)if bool then 	for _, v in pairs(workspace.PlayerModels:GetChildren()) do 		if v:FindFirstChild("Owner") then 			if v:FindFirstChild("BuildDependentWood") and v:FindFirstChild("Type") then if v.Type.Value == "Blueprint" then 				if v:FindFirstChild("MainCFrame") then Tb = v.MainCFrame.Value 				else 				Tb = v.PrimaryPart.CFrame	end; 	game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(v.ItemName.Value, Tb, lp, bai.woodtype,v, false)	end end end end; 	P = workspace.PlayerModels.ChildAdded:connect(function(v) wait(0.3)	if v:FindFirstChild("Owner") then 		if v:FindFirstChild("BuildDependentWood") and v:FindFirstChild("Type") then 			if v.Type.Value == "Blueprint" then local Tb = nil;				 if v:FindFirstChild("MainCFrame") then 					Tb = v.MainCFrame.Value else 						Tb = v.PrimaryPart.CFrame end;						O:FireServer(v.ItemName.Value, Tb, lp, nil, v, true)	end end endend)else 	if P ~= nil then P:Disconnect()	P = nil end endend)Sectionzidongjianzao:Dropdown("选择你想要填充的木头",'Dropdown',{"普通树","沼泽黄金", "樱花", "蓝木", "冰木", "火山木", "橡木", "巧克力木", "白桦木", "黄金木", "雪地松", "僵尸木", "大巧克力树", "椰子树",'粉木','煤炭幻影','黑木','粉色巧克力树','岩浆椰子树','幽灵木','大幽灵木','蓝光椰子树','爬行者树','幻影树','粉色大幽灵木','蓝色大理石幻影','人脸木','太空椰子木','糖果木'},function(b)	if b=='普通树'then		bai.woodtype="Generic"	elseif b=='沼泽黄金'then		bai.woodtype="GoldSwampy"	elseif b=='樱花'then		bai.woodtype="Cherry"	elseif b=='蓝木'then		bai.woodtype="CaveCrawler"	elseif b=='冰木'then		bai.woodtype="lcer"	elseif b=='火山木'then		bai.woodtype="Volcano"	elseif b=='橡木'then		bai.woodtype="Oak"	elseif b=='巧克力木'then		bai.woodtype="Walnut"	elseif b=='白桦木'then		bai.woodtype="Birch"	elseif b=='黄金木'then		bai.woodtype="SnowGlow"	elseif b=='雪地松'then		bai.woodtype="Pine"		elseif b=='僵尸木'then		bai.woodtype="GreenSwampy"	elseif b=='椰子树'then		bai.woodtype="Palm"	elseif b=='粉木'then		bai.woodtype="NoraPink"	elseif b=='煤炭幻影'then		bai.woodtype="Tobu2"	elseif b=='黑木'then		bai.woodtype="Valen"	elseif b=='粉色巧克力树'then		bai.woodtype="Koa"	elseif b=='岩浆椰子树'then		bai.woodtype="Volcano2"                elseif b=='幽灵木'then		bai.woodtype="Spooky"                elseif b=='大幽灵木'then		bai.woodtype="SpookyBig"                elseif b=='蓝光椰子树'then                                bai.woodtype="WinterTree"                elseif b=='爬行者树'then                                bai.woodtype="SpaceSubstanceTree"                elseif b=='幻影树'then		bai.woodtype="LoneCave"                elseif b=='粉色大幽灵木'then		bai.woodtype="GloomyBig"                elseif b=='蓝色大理石幻影'then		bai.woodtype="WinterHell"                elseif b=='人脸木'then		bai.woodtype="MrTree"                elseif b=='太空椰子木'then		bai.woodtype="Greenish"                elseif b=='糖果木'then		bai.woodtype="CandyCane"		endend)Sectionzidongjianzao:Button("油漆工具",  function()local tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)tool.RequiresHandle = false--tool.RobloxLocked = truetool.Name = "点击一个蓝图"tool.ToolTip = "点击一个蓝图"tool.Equipped:connect(function(Mouse)Mouse.Button1Down:connect(function()if Mouse.Target.Parent:FindFirstChild("Type") or Mouse.Target.Parent:FindFirstChild("BlueprintWoodClass") thenlocal Cframeif Mouse.Target.Parent:FindFirstChild("MainCFrame") thenCframe = Mouse.Target.Parent.MainCFrame.ValueelseCframe = Mouse.Target.Parent.PrimaryPart.CFrameendif Mouse.Target.Parent ~= nil thengame.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(Mouse.Target.Parent.ItemName.Value, Cframe,lp, bai.woodtype, Mouse.Target.Parent, false)endelseendend)end)end)Sectionzidongjianzao:Button("自动建城堡",  function()local Player = bai.zdjzwjlocal Remote = game.ReplicatedStorage.PlaceStructure.ClientPlacedStructurelocal Plr = game:GetService("Players").LocalPlayerlocal Check = truelocal BpRecive = { [1] = "Wall2Tall", [2] = "Door1", [3] = "Floor2", [4] = "Floor1Small", [5] = "Post", [6] = "Wedge10", [7] = "Wall3Tall", [8] = "Wall1Tall", [9] = "Wall1", [10] = "Wall1Short", [11] = "Wall2", [12] = "Wall2Short", [13] = "Wall1TallCorner", [14] = "Wall1Corner", [15] = "Wall1ShortCorner", [16] = "Wall1Thin", [17] = "Wall1TallThin", [18] = "Wall1ShortThin", [19] = "Wall2TallThin", [20] = "Wall2Thin", [21] = "Wall2ShortThin", [22] = "Wall2TallCorner", [23] = "Wall2Corner", [24] = "Wall2ShortCorner", [25] = "Wall3Thin", [26] = "Wall3TallThin", [27] = "Wall3Corner", [28] = "Wall3TallCorner", [29] = "Floor1Large", [30] = "Floor1", [31] = "Floor2Large", [32] = "Floor2Small", [33] = "Stair1", [34] = "Stair2", [35] = "Wedge1_Thin", [36] = "Wedge9_Thin", [37] = "Wedge4_Thin", [38] = "Wedge7_Thin", [39] = "Chair1", [40] = "Table1", [41] = "Table2", [42] = "Ladder1", [43] = "Cabinet1Thin", [44] = "Cabinet1", [45] = "Cabinet1CornerTight", [46] = "Cabinet1CornerWide", [47] = "CounterTop1Thin", [48] = "CounterTop1", [49] = "CounterTop1Sink", [50] = "Floor2Tiny", [51] = "Floor1Tiny", [52] = "Wedge1", [53] = "Wedge2", [54] = "Wedge3", [55] = "Wedge4", [56] = "Wedge8", [57] = "Wedge7", [58] = "Wedge6", [59] = "Wedge2_Thin", [60] = "Wedge3_Thin", [61] = "Wedge10_Thin", [62] = "Wedge9", [63] = "Wedge6_Thin", [64] = "Wedge8_Thin", [65] = "Wedge5", [66] = "Wedge5_Thin", [67] = "Wall3", [68] = "Door2", [69] = "Door3" }local function Gray()    local ItsCFrame    local Remote = game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure    for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do        if v:FindFirstChild("Owner") and v.Owner.Value == game.Players[Player] then            if v:FindFirstChild("Type") and v.Type.Value == "Blueprint" then                if v ~= nil then                    Remote:FireServer(v.ItemName.Value, v.PrimaryPart.CFrame, game.Players.LocalPlayer, bai.woodtype, v, flase)                end            end        end    endendlocal Basefor i, v in pairs(game.Workspace.Properties:GetChildren()) do    if v.Owner.Value == game.Players[Player] then        Base = v.OriginSquare.CFrame    endendlocal Count = 0local Gr = 0function Auto_Biud_Base(A_1, A_2, A_3, A_4, A_5, A_6, A_7)    game.ReplicatedStorage.PlaceStructure.ClientPlacedBlueprint:FireServer(BpRecive[A_1], Base* CFrame.Angles(A_2, A_3, A_4) + Vector3.new(A_5, A_6, A_7), Plr)    wait()    if Count > 16 then Count = 0 wait(0.1) else Count = Count + 1 end    if Gr > 50 then Gr = 0 Gray() else Gr = Gr + 1 endend	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 2,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 4,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 6,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 8,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 10,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 12,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 14,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 16,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 18,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 20,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 22,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 24,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 26,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 28,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 30,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 32,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 34,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 36,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 38,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 40,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 42,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 44,-98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 46,-98.5)		Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 2, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 4, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 6, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 8, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 10, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 12, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 14, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 16, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 18, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 20, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 22, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 24, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 26, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 28, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 30, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 32, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 34, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 36, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 38, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 40, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 42, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 44, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,-98.5, 46, 94.5)				Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 2, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 4, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 6, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 8, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 10, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 12, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 14, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 16, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 18, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 20, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 22, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 24, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 26, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 28, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 30, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 32, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 34, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 36, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 38, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 40, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 42, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 44, -98.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,99, 46, -98.5)		Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 2, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 4, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 6, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 8, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 10, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 12, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 14, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 16, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 18, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 20, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 22, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 24, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 26, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 28, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 30, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 32, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 34, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 36, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 38, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 40, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 42, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 44, 94.5)	Auto_Biud_Base(5, 1.5707963705063, 0, -0,98.5, 46, 94.5)		Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 7.8104, -97)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 7.8104, -93)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 7.8104, -89)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 7.8104, -85)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 0, -97)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 0, -93)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 0, -89)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 0, -85)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 15.6208, -97)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 15.6208, -93)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 15.6208, -89)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -26.5, 15.6208, -85)		Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 7.8104, -97)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 7.8104, -93)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 7.8104, -89)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 7.8104, -85)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 0, -97)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 0, -93)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 0, -89)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 0, -85)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 15.6208, -97)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 15.6208, -93)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 15.6208, -89)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 26.5, 15.6208, -85)					Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 10, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 14, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 18, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 22, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 26, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 30, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 34, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126,38, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 42, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 46, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 50, 0,99 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 54, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 58, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 62, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 66, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 70, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 74, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 78, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 82, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 2, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -2, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -6, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -10, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -14, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -18, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -22, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -26, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -30, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -34, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -38, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -42, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -46, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -50, 0,99 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 6, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -54, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -58, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -62, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -66, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -70, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -74, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -78, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -82, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94, 0, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 0, 99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 0, -97.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 0 ,-99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -82, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -78, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -74, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -70,0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -66, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -62, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -58, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -54, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -52, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -48, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -44, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -40, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -36, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -32, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -28, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 28, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 32, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 36, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 40, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 44, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 48, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 52, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 56, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 60, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 64, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 68, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 72, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 76, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 80, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 84, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 88, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 82, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 0, -99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,100, 0, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,100, 0, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 0, -97.5)	---第2层	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 10,7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 14, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 18,7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 22, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 26, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 30, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 34,7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126,38, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 42, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 46, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 50, 7.8104,99 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 54,7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 58, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 62, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 66, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 70, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 74, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 78,7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 82, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 2, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -2, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -6, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -10, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -14, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -18, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -22, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -26, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -30, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -34, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -38, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -42,7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -46, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -50, 7.8104,99 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 6, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -54, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -58, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -62, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -66, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -70, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -74, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -78,7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -82,7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94,7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 7.8104, 99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100,7.8104, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100,7.8104, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100,7.8104, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100,7.8104, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.8104, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 7.81040, -97.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 7.81040 ,-99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -82, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -78, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -74, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -70,7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -66, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -62, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -58, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -54, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -52, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -48, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -44, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -40, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -36, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -32, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -28, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 28, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 32, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 36, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 40, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 44, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 48, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 52, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 56, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 60, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 64, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 68, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 72, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 76, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 80, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 84, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 88, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 82, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 7.81040, -99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,7.8104, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,100,7.8104, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,100, 7.8104, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,100, 7.8104, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,7.8104 , 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,7.8104, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,7.8104, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,7.8104, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,7.8104, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,7.8104, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,7.8104, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 7.8104, -97.5)	---3	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -97.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 10,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 14, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 18,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 22, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 26, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 30, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 34,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126,38, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 42, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 46,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 50, 15.6208,99 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 54,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 58, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 62, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 66, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 70, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 74, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 78,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 82, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 2, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -2, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -6, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -10, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -14, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -18, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -22, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -26, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -30, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -34, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -38, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -42,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -46, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -50, 15.6208,99 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 6,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -54, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -58,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -62, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -66, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -70, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -74, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -78,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -82,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94,15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 15.6208, 99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100,15.6208, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100,15.6208, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100,15.6208, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100,15.6208, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.6208, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 15.62080, -97.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 15.6208 ,-99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -82, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -78, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -74, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -70,15.6208 , -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -66, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -62, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -58, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -54, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -52, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -48, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -44, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -40, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -36, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -32, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -28, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 28, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 32, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 36, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 40, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 44, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 48, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 52, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 56, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 60, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 64, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 68, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 72, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 76, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 80, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 84, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 88, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 82, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 15.6208, -99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,15.6208, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,100,15.6208, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,100, 15.6208, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,100, 15.6208, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,15.6208 , 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,15.6208, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,15.6208, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,15.6208, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,15.6208, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,15.6208, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,15.6208, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,15.6208, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,15.6208, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 15.6208, -93.5)	---第4层	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -97.5)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 10,23.4321, 99)	 Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 18,23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 26, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 34,23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 42, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 50, 23.4321,99 )	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 58, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 66, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 74, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 82, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 90, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 98, 23.4321, 99)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 2, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -6, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -14, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -22, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -30, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -38, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -46, 23.4321, 99)	 	 Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -54, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -62, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -70, 23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -78,23.4321, 99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -86, 23.4321, 99)		Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -94,23.4321, 99)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 57.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 97.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 89.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 81.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 73.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 65.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 49.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 41.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 34.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 26.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100,23.4321, 18.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 10.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, 2.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, -5.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, -13.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, -21.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100,23.4321, -29.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100,23.4321, -37.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, -45.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, -53.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, -61.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, -69.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, -77.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, -85.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4321, -93.5)		Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 10,23.4321, -99)	 Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 18,23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 26, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 34,23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 42, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 50, 23.4321,-99 )	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 58, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 66, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 74, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 82, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 90, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 98, 23.4321, -99)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 2, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -6, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -14, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -22, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -30, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -38, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -46, 23.4321, -99)	 	 Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -54, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -62, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -70, 23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -78,23.4321, -99)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -86, 23.4321, -99)		Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -94,23.4321, -99)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 57.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 97.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 89.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 81.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 73.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 65.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 49.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 41.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 34.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 26.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100,23.4321, 18.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 10.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, 2.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -5.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -13.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -21.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100,23.4321, -29.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100,23.4321, -37.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -45.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -53.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -61.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -69.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -77.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -85.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4321, -93.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -92.5,  46.8624, 85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -84,  46.8624, 85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -92.5,  46.8624, 89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063,- 85,  46.8624, 85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -85,  46.8624, 89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063,- 84,  46.8624, 97)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063,- 84,  46.8624, 89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -84,  46.8624, 93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -86,  46.8624, 97)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -85,  46.8624,93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -92.5,  46.8624,93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -92.5,  46.8624, 89)		Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 100,  46.8624,- 85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 97,  46.8624, -85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 95,  46.8624, -89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 91,  46.8624, -85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 91,  46.8624, -89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 91,  46.8624, -97)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 95,  46.8624,- 89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 95,  46.8624,- 93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 95,  46.8624, -97)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 91,  46.8624,-93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 100,  46.8624,-93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 100,  46.8624,- 89)		Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 100,  46.8624, 85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 97,  46.8624, 85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 95,  46.8624, 89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 91,  46.8624, 85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 91,  46.8624, 89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 91,  46.8624, 97)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 95,  46.8624, 89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 95,  46.8624, 93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 95,  46.8624, 97)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 91,  46.8624,93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 100,  46.8624,93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, 100,  46.8624, 89)		Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -92.5,  46.8624, -85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -84,  46.8624, -85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -92.5,  46.8624, -89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063,- 85,  46.8624, -85.5)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -85,  46.8624, -89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063,- 84,  46.8624, -97)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063,- 84,  46.8624, -89)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -84,  46.8624, -93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -86,  46.8624, -97)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -85,  46.8624,-93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -92.5,  46.8624,-93)	Auto_Biud_Base(1, 1.5707963705063,0, 1.5707963705063, -92.5,  46.8624, -89)	---diban	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 81.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 34.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 30.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 26.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 22.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92,23.4321, 18.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 14.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 10.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 6.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, 2.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -1.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -5.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -9.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -13.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92,23.4321, -17.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -21.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -25.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92,23.4321, -29.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -33.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92,23.4321, -37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -92, 23.4321, -81.5)		Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 81.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 34.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 30.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 26.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 22.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84,23.4321, 18.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 14.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 10.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 6.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, 2.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -1.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -5.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -9.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -13.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84,23.4321, -17.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -21.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -25.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84,23.4321, -29.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -33.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84,23.4321, -37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -84, 23.4321, -81.5)		Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 81.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 34.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 30.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 26.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 22.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83,23.4321, 18.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 14.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 10.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 6.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, 2.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -1.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -5.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -9.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -13.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83,23.4321, -17.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -21.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -25.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83,23.4321, -29.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -33.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83,23.4321, -37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, -83, 23.4321, -81.5)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 10,23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 14, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 18,23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 22, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 26, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 30, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 34,23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126,38, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 42, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 46, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 50, 23.4321,100 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 54,23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 58, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 62, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 66, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 70, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 74, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 78,23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 82, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 2, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -2, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -6, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -10, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -14, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -18, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -22, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -26, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -30, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -34, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -38, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -42,23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -46, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -50, 23.4321,100 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 6, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -54, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -58, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -62, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -66, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -70, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -74, 23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -78,23.4321, 100)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -82,23.4321, 100)		Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 10,23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 14, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 18,23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 22, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 26, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 30, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 34,23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126,38, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 42, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 46, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 50, 23.4321,94 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 54,23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 58, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 62, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 66, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 70, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 74, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 78,23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 82, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 2, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -2, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -6, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -10, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -14, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -18, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -22, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -26, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -30, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -34, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -38, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -42,23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -46, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -50, 23.4321,94 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 6, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -54, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -58, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -62, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -66, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -70, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -74, 23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -78,23.4321, 94)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -82,23.4321, 94)		Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 10,23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 14, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 18,23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 22, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 26, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 30, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 34,23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126,38, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 42, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 46, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 50, 23.4321,92 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 54,23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 58, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 62, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 66, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 70, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 74, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 78,23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 82, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 2, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -2, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -6, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -10, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -14, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -18, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -22, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -26, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -30, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -34, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -38, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -42,23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -46, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -50, 23.4321,91 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 6, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -54, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -58, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -62, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -66, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -70, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -74, 23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -78,23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -82,23.4321,91)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 10,23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 14, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 18,23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 22, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 26, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 30, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 34,23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126,38, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 42, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 46, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 50, 23.4321,-92 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 54,23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 58, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 62, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 66, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 70, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 74, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 78,23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 82, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 2, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -2, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -6, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -10, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -14, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -18, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -22, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -26, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -30, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -34, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -38, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -42,23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -46, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -50, 23.4321,-92 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 6, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -54, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -58, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -62, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -66, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -70, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -74, 23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -78,23.4321, -92)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -82,23.4321, -92)		Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 10,23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 14, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 18,23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 22, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 26, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 30, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 34,23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126,38, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 42, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 46, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 50, 23.4321,-84 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 54,23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 58, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 62, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 66, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 70, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 74, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 78,23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 82, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 2, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -2, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -6, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -10, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -14, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -18, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -22, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -26, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -30, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -34, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -38, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -42,23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -46, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -50, 23.4321,-84 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 6, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -54, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -58, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -62, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -66, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -70, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -74, 23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -78,23.4321, -84)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -82,23.4321, -84)		Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 10,23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 14, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 18,23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 22, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 26, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 30, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 34,23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126,38, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 42, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 46, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 50, 23.4321,-83 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 54,23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 58, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 62, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 66, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 70, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 74, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 78,23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 82, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 2, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -2, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -6, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -10, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -14, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -18, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -22, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -26, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -30, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -34, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -38, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -42,23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -46, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -50, 23.4321,-83 )	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, 6, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -54, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -58, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -62, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -66, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -70, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -74, 23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -78,23.4321, -83)	Auto_Biud_Base(1, 1.5707963705063, 0, -3.1415927410126, -82,23.4321, -83)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 81.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 34.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 30.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 26.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 22.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100,23.4321, 18.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 14.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 10.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 6.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, 2.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -1.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -5.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -9.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -13.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100,23.4321, -17.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -21.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -25.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100,23.4321, -29.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -33.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100,23.4321, -37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 100, 23.4321, -81.5)		Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 81.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 34.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 30.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 26.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 22.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94,23.4321, 18.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 14.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 10.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 6.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, 2.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -1.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -5.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -9.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -13.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94,23.4321, -17.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -21.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -25.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94,23.4321, -29.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -33.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94,23.4321, -37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 94, 23.4321, -81.5)		Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 81.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 34.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 30.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063,91, 23.4321, 26.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, 22.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91,23.4321, 18.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, 14.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, 10.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, 6.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, 2.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -1.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -5.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -9.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -13.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91,23.4321, -17.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -21.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -25.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91,23.4321, -29.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -33.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91,23.4321, -37.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -41.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -45.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -49.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -53.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -57.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -61.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -65.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -69.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -73.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -77.5)	Auto_Biud_Base(1,1.5707963705063,0, 1.5707963705063, 91, 23.4321, -81.5)	---内城	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 10, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 14, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 18, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 22, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 26, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 30, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 34, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126,38, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 42, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 46, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 50, 0,83.5 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 54, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 58, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 62, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 66, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 70, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 74, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 78, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 82, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 2, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -2, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -6, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -10, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -14, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -18, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -22, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -26, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -30, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -34, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -38, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -42, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -46, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -50, 0,83.5 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 6, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -54, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -58, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -62, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -66, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -70, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -74, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -78, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -82, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 0, 83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 0, -97.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 0,-83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 0 ,-83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -82, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -78, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -74, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -70,0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -66, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -62, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -58, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -54, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -52, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -48, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -44, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -40, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -36, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -32, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -28, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 28, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 32, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 36, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 40, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 44, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 48, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 52, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 56, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 60, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 64, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 68, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 72, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 76, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 80, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 84, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 88, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 82, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 0, -83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,83.5, 0, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,83.5, 0, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 0, -97.5)	---第2层	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 10,7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 14, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 18,7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 22, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 26, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 30, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 34,7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126,38, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 42, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 46, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 50, 7.8104,83.5 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 54,7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 58, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 62, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 66, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 70, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 74, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 78,7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 82, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 2, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -2, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -6, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -10, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -14, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -18, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -22, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -26, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -30, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -34, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -38, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -42,7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -46, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -50, 7.8104,83.5 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 6, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -54, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -58, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -62, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -66, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -70, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -74, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -78,7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -82,7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94,7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 7.8104, 83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,7.8104, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,7.8104, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,7.8104, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,7.8104, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.8104, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 7.81040, -97.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 7.81040 ,-83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -82, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -78, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -74, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -70,7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -66, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -62, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -58, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -54, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -52, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -48, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -44, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -40, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -36, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -32, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -28, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 28, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 32, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 36, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 40, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 44, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 48, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 52, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 56, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 60, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 64, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 68, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 72, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 76, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 80, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 84, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 88, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 82, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 7.81040, -83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,7.8104, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,83.5,7.8104, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,83.5, 7.8104, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,83.5, 7.8104, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,7.8104 , 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,7.8104, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,7.8104, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,7.8104, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,7.8104, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,7.8104, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,7.8104, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 7.8104, -97.5)	---3	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -97.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 10,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 14, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 18,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 22, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 26, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 30, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 34,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126,38, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 42, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 46,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 50, 15.6208,83.5 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 54,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 58, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 62, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 66, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 70, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 74, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 78,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 82, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 2, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -2, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -6, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -10, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -14, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -18, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -22, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -26, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -30, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -34, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -38, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -42,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -46, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -50, 15.6208,83.5 )	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 6,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -54, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -58,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -62, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -66, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -70, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -74, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -78,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -82,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94,15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 15.6208, 83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,15.6208, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,15.6208, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,15.6208, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,15.6208, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.6208, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 15.62080, -97.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 15.6208 ,-83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -82, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -78, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -74, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -70,15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -66, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -62, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -58, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -54, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -52, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -48, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -44, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -40, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -36, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -32, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -28, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 28, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 32, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 36, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 40, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 44, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 48, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 52, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 56, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 60, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 64, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 68, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 72, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 76, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 80, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 84, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 88, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 82, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 15.6208, -83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,15.6208, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,83.5,15.6208, 73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,83.5, 15.6208, 69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126,83.5, 15.6208, 65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,15.6208 , 61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,15.6208, 49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 34.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 30.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 26.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 22.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 18.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 14.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 10.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 6.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, 2.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -1.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -5.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,15.6208, -9.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -13.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,15.6208, -17.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,15.6208, -21.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -25.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -29.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -33.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -37.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -41.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -45.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -49.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,15.6208, -53.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -57.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -61.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -65.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -69.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,15.6208, -73.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -77.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,15.6208, -81.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,15.6208, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 15.6208, -93.5)	---第4层	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -97.5)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 10,23.4321, 83.5)	 Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 18,23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 26, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 34,23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 42, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 50, 23.4321,83.5 )	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 58, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 66, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 74, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 82, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 90, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 98, 23.4321, 83.5)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 2, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -6, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -14, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -22, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -30, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -38, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -46, 23.4321, 83.5)	 	 Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -54, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -62, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -70, 23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -78,23.4321, 83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -86, 23.4321, 83.5)		Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -94,23.4321, 83.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 57.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 97.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 89.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 81.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 73.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 65.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 49.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 41.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 34.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 26.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,23.4321, 18.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 10.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, 2.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, -5.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, -13.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, -21.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,23.4321, -29.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5,23.4321, -37.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, -45.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, -53.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, -61.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, -69.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, -77.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, -85.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4321, -93.5)		Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 10,23.4321, -83.5)	 Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 18,23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 26, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 34,23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 42, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 50, 23.4321,-83.5 )	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 58, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 66, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 74, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 82, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 90, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 98, 23.4321, -83.5)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 2, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -6, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -14, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -22, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -30, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -38, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -46, 23.4321, -83.5)	 	 Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -54, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -62, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -70, 23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -78,23.4321, -83.5)	 	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -86, 23.4321, -83.5)		Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -94,23.4321, -83.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 57.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 97.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 89.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 81.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 73.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 65.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 49.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 41.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 34.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 26.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,23.4321, 18.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 10.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, 2.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -5.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -13.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -21.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,23.4321, -29.5)	 	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,23.4321, -37.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -45.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -53.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -61.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -69.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -77.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -85.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4321, -93.5)	---2	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86, 31.2416, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 31.2416, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 31.2416, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 31.2416, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 31.2416, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 31.2416, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94, 31.2416, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 31.2416, 83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 31.2416, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 31.2416, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 31.2416, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 31.2416, -97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 31.2416, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 31.2416, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 31.2416, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 31.2416, 85.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 31.2416, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 31.2416, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 31.2416, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 31.2416, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 31.2416, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 31.2416, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 31.2416, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 31.2416, -83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 31.2416, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 31.2416, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 31.2416, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 31.2416, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,31.2416, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 31.2416, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 31.2416, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 31.2416, -97.5)	---3	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86,39.052, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 39.052, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 39.052, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 39.052, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 39.052, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 39.052, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94, 39.052, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 39.052, 83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 39.052, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 39.052, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 39.052, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 39.052, -97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 39.052, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 39.052, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 39.052, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 39.052, 85.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 39.052, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 39.052, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 39.052, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 39.052, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 39.052, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 39.052, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 39.052, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 39.052, -83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 39.052, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 39.052, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 39.052, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 39.052, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,39.052, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 39.052, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 39.052, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 39.052, -97.5)	---1	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86,23.4312, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 23.4312, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 23.4312, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 23.4312, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 23.4312, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 23.4312, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94, 23.4312, 83.5)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 23.4312, 83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4312, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4312, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4312, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4312, -97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4312, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4312, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4312, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 23.4312, 85.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 23.4312, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 23.4312, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 23.4312, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 23.4312, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 23.4312, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 23.4312, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 23.4312, -83.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 23.4312, -83.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4312, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4312, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4312, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4312, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,23.4312, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4312, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4312, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 23.4312, -97.5)	---外	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86,  23.4312, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90,  23.4312, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94,  23.4312, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98,  23.4312, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 23.4312, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 23.4312, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94,23.4312, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 23.4312, 99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4312, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4312, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4312, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4312, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4312, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4312, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.4312, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 23.43120, -97.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 23.4312, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 23.4312, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 23.4312, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 23.4312, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 23.4312, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 23.4312, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 23.4312, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 23.4312, -99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4312, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4312, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,23.4312, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4312, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,23.4312, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4312, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4312, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 23.4312, -97.5)	---2	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86,  31.2416, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90,  31.2416, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94,  31.2416, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98,  31.2416, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 31.2416, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 31.2416, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94,31.2416, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 31.2416, 99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 31.2416, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 31.2416, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 31.2416, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 31.2416, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 31.2416, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 31.2416, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 31.2416, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 31.24160, -97.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 31.2416, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 31.2416, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 31.2416, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 31.2416, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 31.2416, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 31.2416, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 31.2416, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 31.2416, -99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 31.2416, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 31.2416, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,31.2416, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 31.2416, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,31.2416, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 31.2416, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 31.2416, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 31.2416, -97.5)	---3	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86,  39.052, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90,  39.052, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94,  39.052, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98,  39.052, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -86, 39.052, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -90, 39.052, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -94,39.052, 99)	Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, -98, 39.052, 99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 39.052, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 39.052, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 39.052, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 39.052, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 39.052, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 39.052, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 39.052, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, -100, 39.0520, -97.5)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -98, 39.052, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -94, 39.052, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -90, 39.052, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, -86, 39.052, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 98, 39.052, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 94, 39.052, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 90, 39.052, -99)	Auto_Biud_Base(1, -3.1415927410126,0,  -3.1415927410126, 86, 39.052, -99)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 39.052, 97.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 39.052, 93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,39.052, 89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 39.052, 85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100,39.052, -85.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 39.052, -89.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 39.052, -93.5)	Auto_Biud_Base(1, -3.1415927410126,7.860449,  -3.1415927410126, 100, 39.052, -97.5)	---凸起	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 86,  46.8624, 99)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 94,  46.8624, 99)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -86, 46.8624, 99)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -94,46.8624, 99)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 46.8624, 93.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 46.8624, 85.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 46.8624, -85.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -100, 46.8624, -93.5)	Auto_Biud_Base(11, -3.1415927410126,0,  -3.1415927410126, -94, 46.8624, -99)	Auto_Biud_Base(11, -3.1415927410126,0,  -3.1415927410126, -86, 46.8624, -99)	Auto_Biud_Base(11, -3.1415927410126,0,  -3.1415927410126, 94, 46.8624, -99)	Auto_Biud_Base(11, -3.1415927410126,0,  -3.1415927410126, 86, 46.8624, -99)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 46.8624, 93.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 46.8624, 85.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100,46.8624, -85.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 100, 46.8624, -93.5)	---内	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 86,46.8624, 83.5)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, 94, 46.8624, 83.5)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -86, 46.8624, 83.5)	Auto_Biud_Base(11, -3.1415927410126, 0, -3.1415927410126, -94, 46.8624, 83.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 46.8624, -85.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 46.8624, -93.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 46.8624, 93.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, -83.5, 46.8624, 85.5)	Auto_Biud_Base(11, -3.1415927410126,0,  -3.1415927410126, -94, 46.8624, -83.5)	Auto_Biud_Base(11, -3.1415927410126,0,  -3.1415927410126, -86, 46.8624, -83.5)	Auto_Biud_Base(11, -3.1415927410126,0,  -3.1415927410126, 86, 46.8624, -83.5)	Auto_Biud_Base(11, -3.1415927410126,0,  -3.1415927410126, 94, 46.8624, -83.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 46.8624, 93.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 46.8624, 85.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5,46.8624, -85.5)	Auto_Biud_Base(11, -3.1415927410126,7.860449,  -3.1415927410126, 83.5, 46.8624, -93.5)	notify("白","建造完毕", 4)	wait(0.5)	Gray() 	end)Sectionzidongjianzao:Button("自动建造金字塔",  function()local Player = bai.zdjzwjlocal Remote = game.ReplicatedStorage.PlaceStructure.ClientPlacedStructurelocal Plr = game:GetService("Players").LocalPlayerlocal Check = truelocal BpRecive = { [1] = "Wall2Tall", [2] = "Door1", [3] = "Floor2", [4] = "Floor1Small", [5] = "Post", [6] = "Wedge10", [7] = "Wall3Tall", [8] = "Wall1Tall", [9] = "Wall1", [10] = "Wall1Short", [11] = "Wall2", [12] = "Wall2Short", [13] = "Wall1TallCorner", [14] = "Wall1Corner", [15] = "Wall1ShortCorner", [16] = "Wall1Thin", [17] = "Wall1TallThin", [18] = "Wall1ShortThin", [19] = "Wall2TallThin", [20] = "Wall2Thin", [21] = "Wall2ShortThin", [22] = "Wall2TallCorner", [23] = "Wall2Corner", [24] = "Wall2ShortCorner", [25] = "Wall3Thin", [26] = "Wall3TallThin", [27] = "Wall3Corner", [28] = "Wall3TallCorner", [29] = "Floor1Large", [30] = "Floor1", [31] = "Floor2Large", [32] = "Floor2Small", [33] = "Stair1", [34] = "Stair2", [35] = "Wedge1_Thin", [36] = "Wedge9_Thin", [37] = "Wedge4_Thin", [38] = "Wedge7_Thin", [39] = "Chair1", [40] = "Table1", [41] = "Table2", [42] = "Ladder1", [43] = "Cabinet1Thin", [44] = "Cabinet1", [45] = "Cabinet1CornerTight", [46] = "Cabinet1CornerWide", [47] = "CounterTop1Thin", [48] = "CounterTop1", [49] = "CounterTop1Sink", [50] = "Floor2Tiny", [51] = "Floor1Tiny", [52] = "Wedge1", [53] = "Wedge2", [54] = "Wedge3", [55] = "Wedge4", [56] = "Wedge8", [57] = "Wedge7", [58] = "Wedge6", [59] = "Wedge2_Thin", [60] = "Wedge3_Thin", [61] = "Wedge10_Thin", [62] = "Wedge9", [63] = "Wedge6_Thin", [64] = "Wedge8_Thin", [65] = "Wedge5", [66] = "Wedge5_Thin", [67] = "Wall3", [68] = "Door2", [69] = "Door3" }local function Gray()    local ItsCFrame    local Remote = game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure    for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do        if v:FindFirstChild("Owner") and v.Owner.Value == game.Players[Player] then            if v:FindFirstChild("Type") and v.Type.Value == "Blueprint" then                if v ~= nil then					Remote:FireServer(v.ItemName.Value, v.PrimaryPart.CFrame, game.Players.LocalPlayer, bai.woodtype, v, flase)                end            end        end    endendlocal Basefor i, v in pairs(game.Workspace.Properties:GetChildren()) do    if v.Owner.Value == game.Players[Player] then        Base = v.OriginSquare.CFrame    endendlocal Count = 0local Gr = 0function Auto_Biud_Base(A_1, A_2, A_3, A_4, A_5, A_6, A_7)    game.ReplicatedStorage.PlaceStructure.ClientPlacedBlueprint:FireServer(BpRecive[A_1], Base* CFrame.Angles(A_2, A_3, A_4) + Vector3.new(A_5, A_6, A_7), Plr)    wait()    if Count > 16 then Count = 0 wait(0.1) else Count = Count + 1 end    if Gr > 50 then Gr = 0 Gray() else Gr = Gr + 1 endendAuto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 48.199996948242, 50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 92.200004577637, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -34)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 28.100006103516, 70.099998474121, 22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 56.199996948242, -42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 28.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -10)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 2)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 52.199996948242, -46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 70, 8.2000007629395, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 56.199996948242, 42)Auto_Biud_Base(5, -3.1415927410126, -1.5707963705063, 0, 99.5, 5, -17.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 24.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -6)Auto_Biud_Base(1, 1.5707963705063, -1.5707963705063, 0, 99.5, 18.099937438965, -10.899993896484)Auto_Biud_Base(5, 1.5707963705063, 0, -0, 99.5, 13.599998474121, -18.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 56.199996948242, -42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 60.199996948242, 38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 44.200000762939, -54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 62, 24.200000762939, 74)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 44.200000762939, 54)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 20.100006103516, 78.099998474121, -14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 20.200000762939, 78)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -20.100006103516, 75.599998474121, -22.000015258789)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 44.100006103516, 54.100006103516, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 4.2000007629395, -94)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 86)Auto_Biud_Base(52, -0, 0, -0, -10, 88.200004577637, -2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 20.200000762939, -78)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 42)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 36.100006103516, 62.100006103516, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 20.200000762939, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 28.200000762939, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 8.2000007629395, -90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -82)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -18)Auto_Biud_Base(51, -0, 0, -0, 99.5, 15.200000762939, -17.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 16.200000762939, -82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 20.200000762939, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -58)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 20.100006103516, 75.599998474121, 22)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 16.200000762939, -82)Auto_Biud_Base(52, -0, 0, -0, -6, 92.200004577637, 2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -94)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 38, 58.100006103516, 40.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 16.200000762939, -82)Auto_Biud_Base(52, 3.1415927410126, -0, 1.5707963705063, -20.100006103516, 78.099998474121, -14)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 2)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 34)Auto_Biud_Base(11, -1.5707963705063, -0, -0, -1.9999389648438, 95.599998474121, -0.10000610351563)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -58, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 64.200004577637, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 24.200000762939, -74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 20.200000762939, 78)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 40.100006103516, 55.600006103516, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 24.200000762939, 74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -26)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, 10)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 42, 26.099998474121, 72.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 40.200000762939, 58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 36.200000762939, 62)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, -6, 78.099998474121, 20.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 66, 24.200000762939, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 0.20000076293945, -98)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 60.100006103516, 38.100002288818, 46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 40.200000762939, -58)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 8.2000007629395, -90)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -22, 75.599998474121, 20.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -6)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -46, 51.600006103516, 44.100006103516)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 32.200000762939, 66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 60.199996948242, 38)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, -14, 78.099998474121, 20.100006103516)Auto_Biud_Base(20, -1.5707963705063, 0, -3.1415927410126, 97, 19.599998474121, 13.100006103516)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 58)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 60.199996948242, -38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, 14)Auto_Biud_Base(5, -3.1415927410126, -1.5707963705063, 0, 99.5, 9, -18.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -74, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -10)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -38)Auto_Biud_Base(11, -1.5707963705063, -0, -0, 2.0000610351563, 95.599998474121, -0.10000610351563)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 28.200000762939, -70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 70)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, -10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 64.200004577637, 34)Auto_Biud_Base(52, -0, 0, -0, -14, 84.200004577637, -6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 14, 84.200004577637, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 72.200004577637, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 62, 0.20000076293945, -98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 66, 12.200000762939, 86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 48.199996948242, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 60.199996948242, -38)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -34, 63.600006103516, 32.100006103516)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -50)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 38, 30.099998474121, 68.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 74, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 52.199996948242, -46)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 74, 20.200000762939, 78)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 13, 17.5)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 30, 20.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 36.200000762939, -62)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -42)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -74, 4.2000007629395, -94)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, -18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, 18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, 10)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 34, 62.100006103516, 36.100006103516)Auto_Biud_Base(1, -0, 0, -3.1415927410126, 82, 8, 19.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -90, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 64.200004577637, 34)Auto_Biud_Base(37, -3.1415927410126, 0, -0, 96, 18.999509811401, 18.5)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -2)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 42.100002288818, 56.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 12.200000762939, -86)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 90, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 52.199996948242, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 34, 4.2000007629395, 94)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -68.100006103516, 27.599998474121, -70)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -30)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -52.100006103516, 43.600002288818, -54.000015258789)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 62, 28.200000762939, 70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 44.200000762939, -54)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 36.100006103516, 62.100006103516, 30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 24.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -42)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 46, 26.099998474121, 72.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 38, 16.200000762939, 82)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90.000061035156, 0.20000076293945, -19.5)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 28.200000762939, -70)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 20.100006103516, 78.099998474121, -18)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 34)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 30)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 46)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 52.199996948242, 46)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 53.999938964844, 43.600002288818, -52.100006103516)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 16.100006103516, 79.599998474121, 18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 52.199996948242, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 88.200004577637, -10)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 20.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 26, 8.2000007629395, 90)Auto_Biud_Base(4, 0, 1.5707963705063, 0, 97, 19.199754714966, 18)Auto_Biud_Base(55, -3.1415927410126, 0, -0, 96, 18.999998092651, -9)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 70)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -30, 67.599998474121, 28.100006103516)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -86)Auto_Biud_Base(52, -1.5707963705063, 1.5707963705063, 0, 2, 78.099998474121, -20.100006103516)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 52.199996948242, 46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 40.200000762939, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -58, 16.200000762939, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 44.200000762939, 54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -6)Auto_Biud_Base(55, -3.1415927410126, 0, -0, 96, 18.999998092651, 11)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 32.200000762939, -66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 18, 80.200004577637, -6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 16.200000762939, -82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 94, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 64.200004577637, 34)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -42)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 50, 20.200000762939, 78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 40.200000762939, 58)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -58, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, 14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 26)Auto_Biud_Base(52, -0, 0, -0, -18, 80.200004577637, 6)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, -30)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 38, 46.100006103516, 52.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 28.200000762939, -70)Auto_Biud_Base(52, -1.5707963705063, 1.5707963705063, 0, 18, 78.099998474121, -20.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, 10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 64.200004577637, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 4.2000007629395, -94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -50)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 64.200004577637, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 16.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -66, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -78, 4.2000007629395, -94)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 60.199996948242, -38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -50)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 0.20000076293945, 19.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 48.199996948242, -50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 28.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, 6)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 36.200000762939, 62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 70, 0.20000076293945, 98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 28.200000762939, 70)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, -26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 12.200000762939, 86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 70, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -26)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 38)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 73.999877929688, 23.599998474121, -72.100006103516)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 26.099998474121, 72.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 44.200000762939, -54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 62)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -58, 39.600002288818, 56.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 72.200004577637, 26)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 30)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 58, 16.200000762939, -82)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 36.200000762939, 62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -70, 4.2000007629395, 94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, -10)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 4.2000007629395, 94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 54, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 78, 12.200000762939, -86)Auto_Biud_Base(36, 0, 0, 1.5707963705063, 98.899993896484, 17.099967956543, -18.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 12.200000762939, -86)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 86.000061035156, 19.599998474121, 2.8999938964844)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 78, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 20.200000762939, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 8.2000007629395, -90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 16.200000762939, 82)Auto_Biud_Base(52, 3.1415927410126, -0, 1.5707963705063, -20.100006103516, 78.099998474121, -10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 62, 8.2000007629395, 90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, -26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 36.200000762939, -62)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 84.100006103516, 11.60000038147, 86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -74, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -66, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 8.2000007629395, -90)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 38, 26.099998474121, 72.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, 6)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 56.199996948242, 42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, 18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 8.2000007629395, -90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 46)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -94, 3.6000003814697, 92.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 44.200000762939, 54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 12.200000762939, -86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 32.200000762939, 66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 24.200000762939, -74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 28.200000762939, 70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 64.200004577637, -34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 42)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, 18)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 50)Auto_Biud_Base(51, -1.5707963705063, -1.5707963705063, 0, 99.5, 0.60000038146973, 15.899993896484)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -86, 0.20000076293945, 98)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 86, 19.599998474121, 18.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 52.199996948242, -46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 40.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 16.200000762939, -82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 62, 32.200000762939, 66)Auto_Biud_Base(52, -0, 0, -0, -10, 88.200004577637, 2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 60.199996948242, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 24.200000762939, -74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 64.200004577637, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 16.200000762939, -82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 40.200000762939, -58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 60.100006103516, 38.100002288818, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 4.2000007629395, -94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -26)Auto_Biud_Base(52, 3.1415927410126, -0, 1.5707963705063, -20.100006103516, 78.099998474121, 2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 14, 84.200004577637, -10)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 94.000061035156, 19.599998474121, -5.1000061035156)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 44.200000762939, 54)Auto_Biud_Base(11, -0, -0, -1.5707963705063, 96.100006103516, 18.100059509277, -19.5)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 4.2000007629395, 94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, 2)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 12.200000762939, -86)Auto_Biud_Base(55, -3.1415927410126, 0, -0, 96, 19.000028610229, 7)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -86, 8.2000007629395, -90)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 62, 8.2000007629395, -90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 32.200000762939, 66)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -76.100006103516, 19.599998474121, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 70, 16.200000762939, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 30, 4.2000007629395, 94)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 8.1000061035156, 87.599998474121, 10)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, 18)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 0.20000076293945, 98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -2)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 74, 4.2000007629395, -94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, 6)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 70, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 44.200000762939, 54)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -66, 16.200000762939, -82)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 24.200000762939, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 24.200000762939, -74)Auto_Biud_Base(1, -0, 0, -3.1415927410126, 82, 16, 19.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 0.20000076293945, 98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, 6)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -44.100006103516, 51.600006103516, -46.000015258789)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 38, 42.100002288818, 56.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 88.200004577637, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 40.200000762939, 58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 16.200000762939, 82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, -14)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 10, 78.099998474121, 20.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 12.200000762939, -86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 84.200004577637, -14)Auto_Biud_Base(52, -1.5707963705063, 1.5707963705063, 0, 14, 78.099998474121, -20.100006103516)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -88.100006103516, 7.6000003814697, -90)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 44.100006103516, 51.600006103516, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 40.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, -30)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 26.099998474121, 72.100006103516)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 52.199996948242, -46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -18)Auto_Biud_Base(52, -0, 0, -0, -14, 84.200004577637, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 32.200000762939, 66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 56.199996948242, -42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -94, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 16.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 44.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 12.200000762939, -86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 80.200004577637, 18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 32.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 32.200000762939, -66)Auto_Biud_Base(52, -1.5707963705063, 1.5707963705063, 0, -2, 78.099998474121, -20.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 64.200004577637, 34)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, -14)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 36.200000762939, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 12.200000762939, -86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 48.199996948242, 50)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 5, 17.5)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 38)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 68.200004577637, 30)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94.000061035156, 8.2000007629395, -19.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 80.200004577637, 18)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, 22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -70, 8.2000007629395, 90)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 62)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 56.100006103516, 42.100002288818, 46)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90.000061035156, 8.2000007629395, -19.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 42, 4.2000007629395, 94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 8.2000007629395, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 48.199996948242, 50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 40.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 54)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 62.100006103516, 36.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 8.2000007629395, 90)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 84.200004577637, 14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 58, 28.200000762939, 70)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, -6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, 14)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, -10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 24.200000762939, 74)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 78)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 36.200000762939, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 94, 0.20000076293945, 98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 88.200004577637, 10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 66)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -54, 43.600002288818, 52.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 68.200004577637, -30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 84.200004577637, -14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 48.199996948242, 50)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 54)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 52.100006103516, 46.100006103516, 22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 0.20000076293945, -98)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 50.100006103516, 48.100006103516)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 82, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 24.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 36.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 68.200004577637, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -6, 92.200004577637, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -46)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 60.199996948242, 38)Auto_Biud_Base(52, -1.5707963705063, 1.5707963705063, 0, 10, 78.099998474121, -20.100006103516)Auto_Biud_Base(51, -1.5707963705063, -1.5707963705063, 0, 99.5, 0.60000038146973, 16.899993896484)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 52.100006103516, 46.100006103516, 50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, -14)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 52.100006103516, 46.100006103516, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, 14)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 44.100006103516, 54.100006103516, 26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 32.200000762939, 66)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 50, 46.100006103516, 52.100006103516)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 10)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, -26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 24.200000762939, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -6)Auto_Biud_Base(52, 3.1415927410126, -0, 1.5707963705063, -20.100006103516, 78.099998474121, -6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 26)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, 2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 0.20000076293945, 98)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 21.999938964844, 75.599998474121, -20.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 78, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 40.200000762939, -58)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -62, 35.600002288818, 60.100006103516)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 13, 15.5)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 62)Auto_Biud_Base(1, -3.1415927410126, 0, -1.5707963705063, 88.100006103516, 18.099998474121, 19.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 48.199996948242, 50)Auto_Biud_Base(1, 3.1415927410126, -0, 1.5707963705063, 87.899993896484, 18.100059509277, -19.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -66, 24.200000762939, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 32.200000762939, -66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 40.200000762939, -58)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 26.099998474121, 72.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 52.199996948242, -46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 14, 84.200004577637, 6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 48.199996948242, -50)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, -34)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -6)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -58, 4.2000007629395, 94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 36.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 80.200004577637, -18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 48.199996948242, -50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 4.2000007629395, -94)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 56.100006103516, 39.600002288818, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 16.200000762939, -82)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 40.200000762939, 58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 0.20000076293945, 98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 8.2000007629395, 90)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 44.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 34)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 48.199996948242, 50)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -58)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 24.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 10)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 30)Auto_Biud_Base(5, -0, -1.5707963705063, 0, 99.5, 9.2000007629395, -17.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -62, 12.200000762939, 86)Auto_Biud_Base(51, -0, 0, -0, 99.5, 15.200000762939, -18.5)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 66.099998474121, 32.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 18, 80.200004577637, 2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 48.199996948242, 50)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 5, 16.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 72.200004577637, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 56.199996948242, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -62, 24.200000762939, -74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 48.199996948242, -50)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 36.200000762939, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 24.200000762939, 74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 80.200004577637, 18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, -10)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -46)Auto_Biud_Base(5, -3.1415927410126, -1.5707963705063, 0, 99.5, 5, -15.5)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -82, 8.2000007629395, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 40.200000762939, 58)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 40.200000762939, -58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 80.200004577637, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -62, 4.2000007629395, 94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -74)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 40.200000762939, -58)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 46, 20.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 28.200000762939, 70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 40.200000762939, -58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 60.199996948242, -38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, 14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 66, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 82, 0.20000076293945, -98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 48.199996948242, -50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 52.199996948242, -46)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -2)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 52.199996948242, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -62)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -86)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 30)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 26)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86, 8.2000007629395, 19.5)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 72.200004577637, -26)Auto_Biud_Base(19, 1.5707963705063, 0, -1.5707963705063, 80.100006103516, 19.599998474121, -17.999984741211)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -70, 12.200000762939, -86)Auto_Biud_Base(5, -1.5707963705063, 1.5707963705063, 0, 99.5, 13.599998474121, 18.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 72.200004577637, -26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -26)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 2)Auto_Biud_Base(1, -3.1415927410126, 0, -0, 81.999938964844, 16, -19.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 48.199996948242, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 48.199996948242, -50)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98.000061035156, 8.2000007629395, -19.5)Auto_Biud_Base(5, -0, -1.5707963705063, 0, 99.5, 9.2000007629395, -15.5)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, -6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 56.199996948242, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 22, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 74)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 56.199996948242, -42)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 0.20000076293945, -98)Auto_Biud_Base(19, 1.5707963705063, 0, -1.5707963705063, 88.100006103516, 19.599998474121, -17.999984741211)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, -6)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 56.100006103516, 42.100002288818, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 42, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 28.200000762939, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 26, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 52.199996948242, 46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 36.200000762939, -62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 78)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 32.200000762939, 66)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 0.20000076293945, 19.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 62, 4.2000007629395, 94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 16.200000762939, -82)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 50)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 89.999877929688, 7.6000003814697, -88.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 48.199996948242, -50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 92.200004577637, -6)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -42)Auto_Biud_Base(5, 1.5707963705063, 0, -0, 99.5, 14.599998474121, -18.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 60.199996948242, -38)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 52.199996948242, -46)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -18)Auto_Biud_Base(19, -1.5707963705063, 1.5707963705063, 0, 98.5, 19.099998474121, 18.899993896484)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 32.100006103516, 63.600006103516, 34)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 8.2000007629395, -90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 54, 36.200000762939, 62)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 8.2000007629395, -90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -86)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 34.100002288818, 64.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 12.200000762939, -86)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 38)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -78)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 16.200000762939, -82)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, -22)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 8.2000007629395, -90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -46)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 38)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -54)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 94, 19.599998474121, 10.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 20.200000762939, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 44.200000762939, -54)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 30.099998474121, 68.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 36.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 54, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -18, 80.200004577637, -2)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -26)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 2)Auto_Biud_Base(52, -0, 0, -0, -18, 80.200004577637, 2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, -6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 36.200000762939, 62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, 10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, 10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -54)Auto_Biud_Base(5, -3.1415927410126, -1.5707963705063, 0, 99.5, 5, -18.5)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -46)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 58, 12.200000762939, 86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 68.200004577637, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 52.199996948242, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 24.200000762939, -74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 62, 24.200000762939, -74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 36.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 8.2000007629395, 90)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -40.100006103516, 55.600006103516, -42.000015258789)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 28.200000762939, -70)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 42.100002288818, 56.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -62, 20.200000762939, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 28.200000762939, 70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 36.200000762939, -62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -78, 12.200000762939, 86)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 68.100006103516, 27.599998474121, 70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 72.200004577637, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 72.200004577637, -26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 24.200000762939, -74)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 74.099998474121, 24.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 8.2000007629395, 90)Auto_Biud_Base(62, 0, 0, 1.5707963705063, 98.899993896484, 17.100028991699, 8)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 86, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 48.100006103516, 50.100006103516, 42)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 37.999938964844, 59.600006103516, -36.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 44.200000762939, -54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, -10)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, -6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 64.200004577637, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 52.199996948242, -46)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 18)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 22, 20.200000762939, 78)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 50, 42.100002288818, 56.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 34, 0.20000076293945, 98)Auto_Biud_Base(19, -1.5707963705063, 0, -3.1415927410126, 96.999938964844, 19.600090026855, -18.899993896484)Auto_Biud_Base(55, -3.1415927410126, 0, -0, 96, 19.000089645386, -17)Auto_Biud_Base(1, 1.5707963705063, -1.5707963705063, 0, 99.5, 18.099937438965, -2.8999938964844)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -74, 8.2000007629395, -90)Auto_Biud_Base(52, 3.1415927410126, -0, 1.5707963705063, -20.100006103516, 78.099998474121, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 28.200000762939, 70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 28.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 86, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -62, 28.200000762939, 70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 56.199996948242, 42)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 20.100006103516, 78.099998474121, -2)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 58, 8.2000007629395, 90)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 88.200004577637, -10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 40.200000762939, -58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 60.199996948242, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 62, 16.200000762939, 82)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -14, 83.599998474121, 12.100006103516)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -62, 8.2000007629395, -90)Auto_Biud_Base(52, -0, 0, -0, -10, 88.200004577637, -6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 86, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 80.200004577637, -18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 12.200000762939, -86)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 2)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 88.200004577637, 10)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -62)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 54, 24.200000762939, 74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 24.200000762939, 74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 14)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 70.099998474121, 28.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 28.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, -22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 62, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, -6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 44.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 6, 92.200004577637, -2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 80.200004577637, -18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 44.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 58, 32.200000762939, 66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 68.200004577637, -30)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 54)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -34)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, 10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 56.199996948242, -42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 56.199996948242, -42)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 24.200000762939, -74)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86.000061035156, 8.2000007629395, -19.5)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -86, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 88.200004577637, 10)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -86, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 24.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 90, 0.20000076293945, 98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, -10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -46)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 12.100006103516, 83.599998474121, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 44.200000762939, -54)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -64.100006103516, 31.599998474121, -66.000015258789)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -6)Auto_Biud_Base(5, -3.1415927410126, -1.5707963705063, 0, 99.5, 9, -16.5)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 92.200004577637, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 60.199996948242, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 22, 4.2000007629395, 94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -30)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 58, 28.200000762939, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -82, 12.200000762939, 86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 12.200000762939, -86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 40.200000762939, -58)Auto_Biud_Base(52, -0, 0, -0, -18, 80.200004577637, -6)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 64.200004577637, 34)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 30)Auto_Biud_Base(52, -0, 0, -0, -14, 84.200004577637, 6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -70, 4.2000007629395, -94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 52.199996948242, 46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 48.199996948242, -50)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 48.199996948242, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 40.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 60.199996948242, -38)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -38)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 13, 16.5)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 52.100006103516, 46.100006103516, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 40.200000762939, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 82, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 28.200000762939, -70)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -82, 15.599998474121, 80.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 52.199996948242, -46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 40.200000762939, -58)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -62, 32.200000762939, 66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 20.200000762939, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 44.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 14)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 36.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 56.199996948242, -42)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 86, 4.2000007629395, -94)Auto_Biud_Base(52, -1.5707963705063, 1.5707963705063, 0, -10, 78.099998474121, -20.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 42, 20.200000762939, 78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -26)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 60.100006103516, 38.100002288818, 30)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -82)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -26)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 46, 30.099998474121, 68.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 0.20000076293945, -98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 44.200000762939, -54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 44.200000762939, 54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 48.199996948242, -50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 24.200000762939, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -10)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -4.1000061035156, 91.599998474121, -6.0000152587891)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 28.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -62, 24.200000762939, 74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 58, 24.200000762939, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 52.199996948242, -46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 60.199996948242, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 54, 32.200000762939, 66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 58, 36.200000762939, 62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -78, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 24.200000762939, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, -38)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 30.099998474121, 68.100006103516)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 50, 38.100002288818, 60.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 0.20000076293945, -98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 42)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 46, 38.100002288818, 60.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 6, 92.200004577637, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 64.200004577637, -34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 70, 24.200000762939, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -18)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 82, 19.599998474121, 10.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 20.200000762939, -78)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -14)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 4.2000007629395, 94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, 18)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 34, 34.100002288818, 64.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -58, 24.200000762939, -74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 32.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 44.200000762939, -54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 50, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 66, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 36.200000762939, -62)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 9, 18.5)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -66)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 42, 30.099998474121, 68.100006103516)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 34, 42.100002288818, 56.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -26)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 72.200004577637, -26)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 72.200004577637, -26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 78, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 52.100006103516, 46.100006103516, 38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 28.200000762939, 70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, -10)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -74)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 68.200004577637, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 56.199996948242, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 68.200004577637, 30)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 10)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, 18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 54, 8.2000007629395, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 56.199996948242, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 56.199996948242, -42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 32.200000762939, 66)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 72.200004577637, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 36.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 60.199996948242, 38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 52.199996948242, -46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 44.200000762939, 54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -42)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -50)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 34, 26.099998474121, 72.100006103516)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 60.100006103516, 35.600002288818, 62)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 8.2000007629395, 90)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 20.200000762939, 78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 84.200004577637, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 56.199996948242, -42)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -82, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 44.200000762939, -54)Auto_Biud_Base(62, 0, 0, 1.5707963705063, 98.899993896484, 17.099967956543, -12)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 12.200000762939, -86)Auto_Biud_Base(55, -3.1415927410126, 0, -0, 96, 18.999998092651, 3)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -78, 16.200000762939, -82)Auto_Biud_Base(5, -3.1415927410126, -1.5707963705063, 0, 99.5, 5, -16.5)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, 30)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -48.100006103516, 47.600006103516, -50.000015258789)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 64.200004577637, -34)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 44.100006103516, 54.100006103516, 34)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -84.100006103516, 11.60000038147, -86)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 52.100006103516, 46.100006103516, 46)Auto_Biud_Base(52, -1.5707963705063, 1.5707963705063, 0, 6, 78.099998474121, -20.100006103516)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, -38)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -46)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 4.2000007629395, -94)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 18)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 65.999938964844, 31.599998474121, -64.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 62)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 44.100006103516, 54.100006103516, 22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 58)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 16.200000762939, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 28.200000762939, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 32.200000762939, 66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 66, 24.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 54, 0.20000076293945, 98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 80.200004577637, 18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 50, 4.2000007629395, 94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 40.200000762939, -58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 28.200000762939, -70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, 2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -50)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 8.2000007629395, 90)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -66, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 24.200000762939, -74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -90, 4.2000007629395, -94)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 14, 78.099998474121, 20.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 42, 12.200000762939, 86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 56.199996948242, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 40.200000762939, 58)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 48.100006103516, 50.100006103516, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 42, 0.20000076293945, 98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -30)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, -18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -46)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 8.2000007629395, 19.5)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -58, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 68.200004577637, -30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 20.200000762939, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 32.200000762939, 66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 26)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -58)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 4.2000007629395, -94)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, -10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 80.200004577637, 18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 24.200000762939, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -2)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 26)Auto_Biud_Base(51, 0, 1.5707963705063, 0, 99.5, 0.20000076293945, 17.5)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, 54)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, -30)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 16.100006103516, 82.099998474121, -14)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 20.100006103516, 78.099998474121, -6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -6)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 26)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, 6)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 16.200000762939, 82)Auto_Biud_Base(1, -1.5707963705063, -1.5707963705063, 0, 99.5, 18.100059509277, -11.100006103516)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 92.200004577637, -6)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -38)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 66.099998474121, 32.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 44.200000762939, 54)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -18, 79.599998474121, 16.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 52.199996948242, -46)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 32.100006103516, 66.099998474121, 22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 44.200000762939, 54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, 2)Auto_Biud_Base(5, -3.1415927410126, -1.5707963705063, 0, 99.5, 9, -15.5)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 34, 16.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 58, 12.200000762939, -86)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -34)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -66, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, 18)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 58, 20.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 70, 4.2000007629395, 94)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 5, 18.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 36.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 64.200004577637, -34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -58)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 4.1000061035156, 91.599998474121, 6.0000152587891)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -62, 28.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 78, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -70, 12.200000762939, 86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 58, 0.20000076293945, -98)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -60.100006103516, 35.600002288818, -62.000015258789)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 30)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 64.200004577637, -34)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 40.200000762939, -58)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 42, 34.100002288818, 64.100006103516)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 76.100006103516, 19.599998474121, 78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 36.200000762939, 62)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 48.100006103516, 50.100006103516, 30)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -66, 31.599998474121, 64.100006103516)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 0.20000076293945, -98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -18)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 42, 42.100002288818, 56.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 86, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 36.200000762939, -62)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94, 8.2000007629395, 19.5)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -82, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -46)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 60.199996948242, 38)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 8.2000007629395, -90)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 46)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 30, 16.200000762939, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 52.199996948242, 46)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 10)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -78, 19.599998474121, 76.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 40.200000762939, -58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 32.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 4.2000007629395, -94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 42)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 28.100006103516, 70.099998474121, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 70, 12.200000762939, -86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 68.200004577637, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 0.20000076293945, 98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 52.199996948242, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 28.200000762939, 70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 48.199996948242, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 8.2000007629395, 90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, -26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 4.2000007629395, -94)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -30)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, 2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 34)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 56.100006103516, 42.100002288818, 38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 56.199996948242, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -42)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 54.100006103516, 44.100006103516)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 48.199996948242, -50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 24.200000762939, 74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 44.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 36.200000762939, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 8.2000007629395, -90)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, -18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 58, 16.200000762939, 82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 0.20000076293945, 98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 24.200000762939, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -10)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 32.200000762939, -66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 18, 80.200004577637, 6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -70, 20.200000762939, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 0.20000076293945, -98)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98.000061035156, 0.20000076293945, -19.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 60.199996948242, 38)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 94.000061035156, 0.20000076293945, -19.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 60.199996948242, 38)Auto_Biud_Base(11, 1.5707963705063, -1.5707963705063, 0, 99.5, 18.099998474121, 13.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 60.199996948242, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 12.200000762939, 86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 58, 4.2000007629395, -94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -54)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -56.100006103516, 39.600002288818, -58.000015258789)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -30)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 48.100006103516, 47.600006103516, 50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -18)Auto_Biud_Base(20, 0, 1.5707963705063, 0, 99.5, 16.200000762939, 18)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 52.100006103516, 43.600002288818, 54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -66, 20.200000762939, 78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 28.200000762939, 70)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 4.2000007629395, 94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 20.200000762939, 78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 56.199996948242, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 4.2000007629395, -94)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, -6)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 92.100006103516, 3.6000003814697, 94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 12.200000762939, 86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 48.199996948242, 50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 8.2000007629395, -90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 42, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 60.199996948242, 38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 28.200000762939, -70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 40.200000762939, -58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 20.200000762939, -78)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 28.200000762939, 70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 36.200000762939, -62)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -10)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 82, 4.2000007629395, -94)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 90, 19.599998474121, 18.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 64.200004577637, -34)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, 6)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 22, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -58, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 56.100006103516, 42.100002288818, 30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -58)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, 6)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 46, 50.100006103516, 48.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 72.200004577637, 26)Auto_Biud_Base(62, 0, 0, 1.5707963705063, 98.899993896484, 17.100059509277, 12)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 80.200004577637, -18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 16.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 36.200000762939, -62)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 2)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 50.100006103516, 48.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 56.199996948242, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 18, 80.200004577637, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 12.200000762939, -86)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, 18)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 86, 19.599998474121, 10.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 36.200000762939, 62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 8.2000007629395, 90)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, 14)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -26)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 36.200000762939, -62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 44.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 18)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 44.200000762939, 54)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 34)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 58.100006103516, 40.100006103516)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 6)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -86, 11.60000038147, 84.100006103516)Auto_Biud_Base(11, -1.5707963705063, -0, -0, 2.0000610351563, 95.599998474121, 3.8999938964844)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 40.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -46)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -70, 27.599998474121, 68.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -74, 0.20000076293945, -98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 66, 16.200000762939, -82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 74, 8.2000007629395, -90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 46)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, 22)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 64.200004577637, -34)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 32.200000762939, 66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 52.199996948242, -46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, 2)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -26)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 46, 16.200000762939, 82)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 25.999938964844, 71.599998474121, -24.100006103516)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -80.100006103516, 15.599998474121, -82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -74, 16.200000762939, -82)Auto_Biud_Base(52, -1.5707963705063, 1.5707963705063, 0, -6, 78.099998474121, -20.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 12.200000762939, -86)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 38, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -22)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 34, 58.100006103516, 40.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 14)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, -6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -14)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 18)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 38.100002288818, 60.100006103516)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 62.100006103516, 36.100006103516)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 14, 84.200004577637, -6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 12.200000762939, 86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 52.199996948242, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 90, 4.2000007629395, -94)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 38)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 60.100006103516, 38.100002288818, 38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -30)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 86.000061035156, 19.599998474121, -5.1000061035156)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -66, 24.200000762939, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 38)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 32.200000762939, -66)Auto_Biud_Base(62, 0, 0, 1.5707963705063, 98.899993896484, 17.100059509277, 16)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 58, 36.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 38, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 48.199996948242, -50)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 64.100006103516, 31.599998474121, 66)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 34)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 5, 15.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 68.200004577637, -30)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 24.200000762939, 74)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 60.199996948242, 38)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -58, 28.200000762939, -70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 60.199996948242, -38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 20.200000762939, -78)Auto_Biud_Base(1, -3.1415927410126, 0, -0, 81.999938964844, 8, -19.5)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 48.100006103516, 50.100006103516, 22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 24.200000762939, 74)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 9, 15.5)Auto_Biud_Base(62, 0, 0, 1.5707963705063, 98.899993896484, 17.100028991699, -0)Auto_Biud_Base(55, -3.1415927410126, 0, -0, 96, 18.999998092651, -5)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 24.200000762939, 74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 32.200000762939, 66)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -90, 7.6000003814697, 88.100006103516)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, -30)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 70, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 70, 24.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, -22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 8.2000007629395, 90)Auto_Biud_Base(5, -0, -1.5707963705063, 0, 99.5, 9.2000007629395, -18.5)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 34, 46.100006103516, 52.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 58)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 26)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86, 0.20000076293945, 19.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 44.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, -22)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, -6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 30, 12.200000762939, 86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 12.200000762939, -86)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -36.100006103516, 59.600006103516, -38.000015258789)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 66.099998474121, 32.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -46)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -58, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 72.200004577637, -26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 32.200000762939, -66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -42)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 20.200000762939, 78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 66, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 68.200004577637, 30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 16.200000762939, -82)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 24.100006103516, 71.599998474121, 26)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 60.100006103516, 38.100002288818, 22)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 9, 16.5)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 46, 8.2000007629395, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 40.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 12.200000762939, -86)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, -26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 32.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 28.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 54)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 32.200000762939, 66)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 46.100006103516, 52.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 72.200004577637, 26)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 19.5)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -18, 80.200004577637, -10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 68.200004577637, -30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 40.200000762939, -58)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 61.999938964844, 35.600002288818, -60.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -38)Auto_Biud_Base(19, -1.5707963705063, 1.5707963705063, 0, 98.5, 19.100090026855, -5.1000061035156)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 24.200000762939, 74)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 52.199996948242, -46)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 64.200004577637, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 32.200000762939, -66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -26)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 90, 19.599998474121, 10.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 48.199996948242, -50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 28.200000762939, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 30, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 4.2000007629395, 94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 50, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 64.200004577637, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 46)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 14, 84.200004577637, 10)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 40.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 28.200000762939, -70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 24.200000762939, -74)Auto_Biud_Base(5, -1.5707963705063, 1.5707963705063, 0, 99.5, 15.599998474121, 18.899993896484)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -58, 36.200000762939, 62)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 48.100006103516, 50.100006103516, 34)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 42)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -50, 47.600006103516, 48.100006103516)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 20.100006103516, 78.099998474121, 6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, -2)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 56.199996948242, 42)Auto_Biud_Base(62, 0, 0, 1.5707963705063, 98.899993896484, 17.100028991699, 4)Auto_Biud_Base(52, 3.1415927410126, -0, 1.5707963705063, -20.100006103516, 78.099998474121, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 60.199996948242, 38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 36.200000762939, 62)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 20.200000762939, 78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -58)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 56.100006103516, 42.100002288818, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 8.2000007629395, 90)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 34, 30.099998474121, 68.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 84.200004577637, -14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 0.20000076293945, 98)Auto_Biud_Base(1, -1.5707963705063, 0, 1.5707963705063, 95.899993896484, 19.599998474121, -14.999984741211)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 20.200000762939, 78)Auto_Biud_Base(55, -3.1415927410126, 0, -0, 96, 18.999998092651, 15)Auto_Biud_Base(62, 0, 0, 1.5707963705063, 98.899993896484, 17.100028991699, -4)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 60.100006103516, 38.100002288818, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, 14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 62, 20.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 36.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -74, 8.2000007629395, 90)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 29.999938964844, 67.599998474121, -28.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -42)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 52.100006103516, 46.100006103516, 34)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 16.200000762939, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 78, 16.200000762939, 82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 36.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 74, 4.2000007629395, 94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 48.199996948242, 50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 52.199996948242, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, 18)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, 14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 28.200000762939, 70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -38)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 84.200004577637, -14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 44.200000762939, 54)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 58, 20.200000762939, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 56.199996948242, -42)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -62, 20.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 16.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 24.200000762939, -74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 28.200000762939, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 84.200004577637, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 56.100006103516, 42.100002288818, 22)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 94.000061035156, 19.599998474121, 2.8999938964844)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -62, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 28.200000762939, 70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 36.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 72.200004577637, -26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 20.200000762939, -78)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -8.1000061035156, 87.599998474121, -10.000015258789)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 48.199996948242, -50)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 62, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 0.20000076293945, -98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -22)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, -10)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, 10)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 70)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 86.000061035156, 0.20000076293945, -19.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 36.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -78, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 68.200004577637, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 82, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 32.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 66, 4.2000007629395, -94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 40.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 36.200000762939, -62)Auto_Biud_Base(19, -1.5707963705063, 1.5707963705063, 0, 98.5, 19.10001373291, 2.8999938964844)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 58.100006103516, 40.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 68.200004577637, 30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -74, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -66, 28.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 66, 8.2000007629395, 90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 66)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -6)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 90.000061035156, 19.599998474121, 2.8999938964844)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 58, 24.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 70, 8.2000007629395, -90)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, -14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -94, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 52.199996948242, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 56.199996948242, 42)Auto_Biud_Base(62, 0, 0, 1.5707963705063, 98.899993896484, 17.099967956543, -16)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 50)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 82, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 68.200004577637, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 24.200000762939, 74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 24.200000762939, 74)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, 6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 24.200000762939, -74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -58, 32.200000762939, 66)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -30)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -6)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 50.100006103516, 48.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 36.200000762939, -62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -70)Auto_Biud_Base(19, -1.5707963705063, 0, -3.1415927410126, 96.999938964844, 19.599998474121, -2.8999938964844)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 38)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 6, 78.099998474121, 20.100006103516)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -10, 87.599998474121, 8.1000061035156)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -14)Auto_Biud_Base(5, -0, 0, -0, 99.5, 9.2000007629395, -16.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 66, 20.200000762939, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 24.200000762939, 74)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 30)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 60.100006103516, 38.100002288818, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 40.200000762939, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 26, 0.20000076293945, 98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 40.200000762939, -58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 28.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -38)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 50, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, -26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 46, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 62, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 28.200000762939, -70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 24.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -22)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 28.200000762939, -70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 40.200000762939, -58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, -18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 68.200004577637, -30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 4.2000007629395, -94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 74, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 16.200000762939, -82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 40.200000762939, 58)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -70, 8.2000007629395, -90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 40.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, -14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 8.2000007629395, -90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 56.199996948242, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 52.199996948242, -46)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 46, 46.100006103516, 52.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 42)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 80.100006103516, 15.599998474121, 82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 54)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -50)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 20.200000762939, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 80.200004577637, 18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -82, 0.20000076293945, 98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 40.200000762939, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 16.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -58, 36.200000762939, -62)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, 22)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, -2)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 40.100006103516, 58.100006103516, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 48.199996948242, -50)Auto_Biud_Base(51, -0, 0, -0, 99.5, 15.200000762939, -16.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, 10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 52.199996948242, -46)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 20.200000762939, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -50)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 13, 18.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 36.200000762939, -62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -34)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 41.999938964844, 55.600006103516, -40.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -78, 0.20000076293945, 98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -78, 8.2000007629395, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 36.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 78, 8.2000007629395, -90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 28.200000762939, 70)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 56.199996948242, 42)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -5.9999389648438, 91.599998474121, 4.1000061035156)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 40.200000762939, -58)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 56.199996948242, -42)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 88.200004577637, -10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 28.200000762939, 70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 54, 12.200000762939, 86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 0.20000076293945, 98)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 13.999938964844, 83.599998474121, -12.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 0.20000076293945, -98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 28.200000762939, -70)Auto_Biud_Base(51, 0, 1.5707963705063, 0, 99.5, 0.20000076293945, 18.5)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -66, 16.200000762939, 82)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 40.100006103516, 58.100006103516, 22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -38)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 48.199996948242, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 6)Auto_Biud_Base(52, 3.1415927410126, -0, 1.5707963705063, -20.100006103516, 78.099998474121, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 18, 80.200004577637, -2)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, -18)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, -22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 34, 20.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -14)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 66, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 20.200000762939, -78)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -10)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 54)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -66, 20.200000762939, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 20.200000762939, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, 18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -14)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 72.200004577637, -26)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 22)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 74, 16.200000762939, -82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 12.200000762939, -86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -50)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 38, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 24.200000762939, -74)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 36.100006103516, 62.100006103516, 22)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -58)Auto_Biud_Base(52, -0, 0, -0, -14, 84.200004577637, -10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 52.199996948242, -46)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 32.200000762939, -66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, 18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 52.199996948242, 46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 48.199996948242, -50)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 94, 19.599998474121, 18.899993896484)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 46, 34.100002288818, 64.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 22, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 68.200004577637, -30)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -22)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 90.000061035156, 19.599998474121, -5.1000061035156)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 28.200000762939, 70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 48.199996948242, 50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, -22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 68.200004577637, 30)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 46.100006103516, 52.100006103516)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 20.100006103516, 78.099998474121, 2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 72.200004577637, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -82, 8.2000007629395, -90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 64.200004577637, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 14, 84.200004577637, 2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 22)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -74)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 45.999938964844, 51.600006103516, -44.100006103516)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -50)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 54)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -62, 32.200000762939, -66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 44.200000762939, 54)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 48.100006103516, 50.100006103516, 38)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -46)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 50, 30.099998474121, 68.100006103516)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 20.200000762939, -78)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 58)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 20.200000762939, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 18, 80.200004577637, 10)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 66, 28.200000762939, -70)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 20.100006103516, 78.099998474121, 10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 38)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 24.200000762939, 74)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 22)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -38, 59.600006103516, 36.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 12.200000762939, 86)Auto_Biud_Base(52, -1.5707963705063, 1.5707963705063, 0, -18, 78.099998474121, -20.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 72.200004577637, -26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -30)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, -10, 78.099998474121, 20.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 64.200004577637, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 74, 20.200000762939, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -62, 16.200000762939, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 32.200000762939, 66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 60.199996948242, -38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 64.200004577637, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, 38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -66, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 12.200000762939, 86)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 60.100006103516, 38.100002288818, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 28.200000762939, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 24.200000762939, 74)Auto_Biud_Base(5, -3.1415927410126, -1.5707963705063, 0, 99.5, 9, -17.5)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 54, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 22)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 84.200004577637, 14)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -2)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, -18)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 36.200000762939, 62)Auto_Biud_Base(52, -0, 0, -0, -18, 80.200004577637, -14)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 40.100006103516, 58.100006103516, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 12.200000762939, -86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, 6)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 52.199996948242, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 28.200000762939, 70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 40.200000762939, -58)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 32.200000762939, -66)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 54, 42.100002288818, 56.100006103516)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, -14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -78, 0.20000076293945, -98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 16.200000762939, -82)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 72.100006103516, 23.599998474121, 74)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 20.200000762939, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 18, 80.200004577637, -10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, 2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 62)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 42, 50.100006103516, 48.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -38)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -38)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 52.199996948242, -46)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -26)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -26)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 81.999877929688, 15.599998474121, -80.100006103516)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, 30)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 40.100006103516, 58.100006103516, 30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 56.199996948242, -42)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -62)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, -18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 32.200000762939, 66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 48.199996948242, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 36.200000762939, 62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 12.200000762939, 86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 16.200000762939, -82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 62, 12.200000762939, -86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 28.200000762939, 70)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -14)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, -22)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 34, 54.100006103516, 44.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 50, 8.2000007629395, 90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -82)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 30.099998474121, 68.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -58, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 44.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 32.200000762939, -66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 0.20000076293945, -98)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 17.999938964844, 79.599998474121, -16.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 68.200004577637, -30)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 38, 38.100002288818, 60.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 10, 88.200004577637, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -86, 4.2000007629395, 94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 44.200000762939, 54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -78, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, -30)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 38)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 66, 28.200000762939, 70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 80.200004577637, 18)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 72.200004577637, -26)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -42, 55.600006103516, 40.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 36.200000762939, 62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 44.200000762939, 54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 68.200004577637, -30)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -6)Auto_Biud_Base(55, -3.1415927410126, 0, -0, 96, 18.999998092651, -13)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -70, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 18)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -10)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 56.100006103516, 42.100002288818, 26)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -46)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 94)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, 10)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -82)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 88.100006103516, 7.6000003814697, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 26, 44.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -58, 28.200000762939, 70)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -90, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, -14)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 54)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 77.999877929688, 19.599998474121, -76.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 0.20000076293945, -98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 78, 0.20000076293945, -98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -34)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 36.100006103516, 62.100006103516, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 44.200000762939, -54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -66, 8.2000007629395, -90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 20.200000762939, 78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 24.200000762939, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -38)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, -6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 52.199996948242, -46)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 50, 34.100002288818, 64.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 58, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 44.100006103516, 54.100006103516, 38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 62)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -16.100006103516, 79.599998474121, -18.000015258789)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -58, 0.20000076293945, 98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -66, 28.200000762939, 70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 64.200004577637, -34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 70, 16.200000762939, -82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 50)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 30)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 54)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -58)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 49.999938964844, 47.600006103516, -48.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 56.199996948242, -42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 84.200004577637, -14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 32.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 20.200000762939, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, -14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 46, 12.200000762939, 86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 8.2000007629395, -90)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, -26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 80.200004577637, -18)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -10)Auto_Biud_Base(52, -0, 0, -0, -18, 80.200004577637, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 0.20000076293945, -98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -62, 8.2000007629395, 90)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -78)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -72.100006103516, 23.599998474121, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 46)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 38.100002288818, 60.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 4.2000007629395, -94)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 9.9999389648438, 87.599998474121, -8.1000061035156)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 20.200000762939, -78)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, -14)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -10)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 36.100006103516, 59.600006103516, 38)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 56.199996948242, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 74, 8.2000007629395, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -78, 16.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -54, 24.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -50)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 64.200004577637, -34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 20.200000762939, 78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 52.199996948242, 46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 16.200000762939, -82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 66)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 26, 72.200004577637, -18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 0.20000076293945, -98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 48.199996948242, -50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -18)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 64.200004577637, -34)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 34.100002288818, 64.100006103516)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 18)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 57.999938964844, 39.600002288818, -56.100006103516)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, -26)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 52.100006103516, 46.100006103516, 30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 48.199996948242, -50)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, -2)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 62)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -24.100006103516, 71.599998474121, -26.000015258789)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 5.9999389648438, 91.599998474121, -4.1000061035156)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 48.199996948242, 50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 22)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -70)Auto_Biud_Base(19, -1.5707963705063, 0, -3.1415927410126, 96.999938964844, 19.599998474121, -10.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 12.200000762939, -86)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -50)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 20.100006103516, 78.099998474121, -10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, 30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 10, 88.200004577637, -6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 80.200004577637, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 4.2000007629395, 94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -58, 24.200000762939, 74)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, -34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 18)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -10)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 54.100006103516, 44.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -74)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, 22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 22, 0.20000076293945, 98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 60.199996948242, -38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 64.200004577637, -34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -70, 20.200000762939, 78)Auto_Biud_Base(1, -1.5707963705063, 0, 1.5707963705063, 87.899993896484, 19.599998474121, -14.999984741211)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 32.200000762939, 66)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 42, 54.100006103516, 44.100006103516)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 16.200000762939, -82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 16.200000762939, -82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 68.200004577637, -30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 74)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -74)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 14)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 70, 20.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 22)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -22)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 2, 78.099998474121, 20.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -66, 0.20000076293945, -98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 4.2000007629395, -94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, 6)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 48.100006103516, 50.100006103516, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 10, 88.200004577637, -2)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -54)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 56.100006103516, 42.100002288818, 50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 8.2000007629395, -90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 58, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 82, 12.200000762939, -86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -30)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, -14)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 66, 0.20000076293945, -98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 6)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -10)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 38)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -38)Auto_Biud_Base(11, -1.5707963705063, -0, -0, -1.9999389648438, 95.599998474121, 3.8999938964844)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, 14)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -18)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 40.200000762939, 58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 30, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 36.200000762939, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 44.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 46)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -50)Auto_Biud_Base(19, -1.5707963705063, 1.5707963705063, 0, 98.5, 19.099937438965, 10.899993896484)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -10)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, -30)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 40.200000762939, -58)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 38, 34.100002288818, 64.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 68.200004577637, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -70, 16.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 36.200000762939, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 36.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 48.199996948242, 50)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 66)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -62, 4.2000007629395, -94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 26, 16.200000762939, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -14, 84.200004577637, 2)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 46, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 54, 24.200000762939, -74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 64.200004577637, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 70)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 42, 38.100002288818, 60.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 32.200000762939, 66)Auto_Biud_Base(52, -0, 0, -0, -50, 48.199996948242, 30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 40.200000762939, -58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 8.2000007629395, -90)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 38.100002288818, 60.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 44.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 2, 28.200000762939, -70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 22, 76.200004577637, 18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 2)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -22)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 76.200004577637, 22)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -70, 24.200000762939, 74)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 44.100006103516, 54.100006103516, 42)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 74, 16.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 68.200004577637, -30)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, 10)Auto_Biud_Base(55, -3.1415927410126, 0, -0, 96, 18.999998092651, -1)Auto_Biud_Base(52, -1.5707963705063, 1.5707963705063, 0, -14, 78.099998474121, -20.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 32.200000762939, -66)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 38)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 40.200000762939, -58)Auto_Biud_Base(62, 0, 0, 1.5707963705063, 98.899993896484, 17.100028991699, -8)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 28.200000762939, 70)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 60.199996948242, 38)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -28.100006103516, 67.599998474121, -30.000015258789)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 56.199996948242, -42)Auto_Biud_Base(20, -1.5707963705063, 1.5707963705063, 0, 98.5, 19.099876403809, -13.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 12.200000762939, 86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 44.200000762939, -54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 58, 32.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 48.199996948242, -50)Auto_Biud_Base(11, -3.1415927410126, 0, -1.5707963705063, 96.100006103516, 18.099998474121, 19.5)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -54, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -62, 0.20000076293945, 98)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 72.200004577637, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 16.200000762939, -82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 0.20000076293945, -98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 16.200000762939, -82)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 32.200000762939, 66)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 56.199996948242, 42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -66)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 42, 46.100006103516, 52.100006103516)Auto_Biud_Base(21, -1.5707963705063, 1.5707963705063, 0, 98.5, 19.099876403809, -17.100006103516)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 62.100006103516, 36.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -74, 20.200000762939, -78)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 34.100002288818, 64.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -38)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 46, 52.199996948242, -42)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 54.100006103516, 44.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 40.200000762939, -58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 20.200000762939, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 36.200000762939, 62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 72.200004577637, 26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 78, 8.2000007629395, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 38, 8.2000007629395, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 56.199996948242, 42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 64.200004577637, 34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, 18)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 54)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 14)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 32.100006103516, 66.099998474121, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 34, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -26)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 24.200000762939, 74)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 34, 50.100006103516, 48.100006103516)Auto_Biud_Base(52, -0, 0, -0, -54, 44.200000762939, 10)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, 14)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -26)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -46, 44.200000762939, -54)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -34)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 50)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -74, 16.200000762939, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 48.199996948242, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 84.200004577637, -14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -58, 20.200000762939, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 84.200004577637, 14)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -26, 71.599998474121, 24.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, 6)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 28.200000762939, -70)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 72.200004577637, -26)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 38, 54.100006103516, 44.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 34)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 42.100002288818, 56.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 62, 32.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 42, 44.200000762939, -54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 8.2000007629395, 90)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -10, 12.200000762939, 86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -82)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, -10)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -18)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, -2)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 74, 12.200000762939, -86)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 4.2000007629395, -94)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 74, 0.20000076293945, -98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 36.200000762939, -62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 22)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 56.199996948242, -42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 24.200000762939, 74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 44.200000762939, 54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 8.2000007629395, -90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 66, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -86, 4.2000007629395, -94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 44.200000762939, 54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 14, 44.200000762939, -54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 80.200004577637, -18)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 85.999877929688, 11.60000038147, -84.100006103516)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, -34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -90, 4.2000007629395, 94)Auto_Biud_Base(52, -0, 0, -0, -14, 84.200004577637, -2)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 30, 58.100006103516, 40.100006103516)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 28.200000762939, -70)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 8.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 60.199996948242, -38)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 40.200000762939, -58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -38, 32.200000762939, 66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 34, 8.2000007629395, 90)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 78, 4.2000007629395, -94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 48.199996948242, 50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -26, 4.2000007629395, 94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, -82)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 2)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 10)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -62)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, 6)Auto_Biud_Base(5, -3.1415927410126, 0, -0, 99.5, 9, 17.5)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 69.999877929688, 27.599998474121, -68.100006103516)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -62)Auto_Biud_Base(11, 1.5707963705063, 0, -0, -74, 23.599998474121, 72.100006103516)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 38, 60.199996948242, 18)Auto_Biud_Base(52, -0, 0, -0, -34, 64.200004577637, -14)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 34)Auto_Biud_Base(1, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 19.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -70, 24.200000762939, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -46)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 20.200000762939, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 32.200000762939, 66)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 24.200000762939, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, 18)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -62, 16.200000762939, -82)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, -42)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 30, 60.199996948242, -38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 10, 88.200004577637, 2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 20.200000762939, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -66, 8.2000007629395, 90)Auto_Biud_Base(11, 1.5707963705063, 0, -1.5707963705063, 28.100006103516, 67.599998474121, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 60.199996948242, 38)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 18)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, -18, 78.099998474121, 20.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -42)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 24.100006103516, 74.099998474121, 22)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, 6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 18, 48.199996948242, 50)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -38, 20.200000762939, -78)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -34)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 26)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 18)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 4.2000007629395, 94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 52.199996948242, 46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 72.200004577637, 26)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -2)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, -66)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 93.999877929688, 3.6000003814697, -92.100006103516)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 34, 38.100002288818, 60.100006103516)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, -38)Auto_Biud_Base(52, -0, 0, -0, -42, 56.199996948242, 22)Auto_Biud_Base(5, -1.5707963705063, 0, -3.1415927410126, 99.5, 0.60000038146973, -18.899993896484)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 6)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 50)Auto_Biud_Base(52, 3.1415927410126, -0, 1.5707963705063, -20.100006103516, 78.099998474121, 14)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 60.199996948242, -38)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -42, 8.2000007629395, 90)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 80.200004577637, 18)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 20.100006103516, 78.099998474121, 14)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -74)Auto_Biud_Base(37, -3.1415927410126, 0, -0, 96, 18.999509811401, 17.5)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, -50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 56.199996948242, 42)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 82, 19.599998474121, 18.899993896484)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -58)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -92.100006103516, 3.6000003814697, -94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, 34)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, -2, 78.099998474121, 20.100006103516)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, -70)Auto_Biud_Base(51, -0, 0, -0, 99.5, 15.200000762939, -15.5)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -34)Auto_Biud_Base(36, 0, 0, 1.5707963705063, 98.899993896484, 17.09973526001, 18.5)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, 58)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 0.20000076293945, 98)Auto_Biud_Base(5, -1.5707963705063, 1.5707963705063, 0, 99.5, 14.599998474121, 18.899993896484)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 20.200000762939, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, 26)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -42, 20.200000762939, -78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -30, 20.200000762939, 78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 50)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, -14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -34, 16.200000762939, 82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 44.200000762939, 54)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -54)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 6, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 50, 24.200000762939, -74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, 30)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, -38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -34)Auto_Biud_Base(52, 3.1415927410126, -0, 1.5707963705063, -20.100006103516, 78.099998474121, 18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 26, 4.2000007629395, 94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 86, 8.2000007629395, -90)Auto_Biud_Base(1, 1.5707963705063, -1.5707963705063, 0, 99.5, 18.099937438965, 5.1000061035156)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 20.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 6)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 30, 68.200004577637, 18)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, -34)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 0.20000076293945, 98)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 62, 28.200000762939, -70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 46, 12.200000762939, -86)Auto_Biud_Base(11, 1.5707963705063, -0, -3.1415927410126, 33.999938964844, 63.600006103516, -32.100006103516)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 70, 20.200000762939, -78)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 86, 12.200000762939, 34)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -26, 0.20000076293945, -98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, -18)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, 38)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 6)Auto_Biud_Base(52, -0, 0, -0, -66, 32.200000762939, 10)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 30)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, -74)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 84.200004577637, 14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 36.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -30, 8.2000007629395, -90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 62, 20.200000762939, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 60.199996948242, -38)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 8.2000007629395, 90)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 22, 70.099998474121, 28.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 54, 28.200000762939, 70)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 18)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 14)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, 22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 72.200004577637, -26)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 46, 42.100002288818, 56.100006103516)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 26, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -90)Auto_Biud_Base(52, -0, 0, -0, -38, 60.199996948242, 34)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 44.200000762939, 54)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -50, 20.200000762939, 78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 16.200000762939, 82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 4.2000007629395, -94)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -70, 0.20000076293945, -98)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 38, 50.100006103516, 48.100006103516)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, 42)Auto_Biud_Base(1, -3.1415927410126, 0, -1.5707963705063, 80.100006103516, 18.099998474121, 19.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 24.200000762939, -74)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 32.100006103516, 66.099998474121, 26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -42)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -58, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -6, 20.200000762939, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 58, 8.2000007629395, -90)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, 22)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -14)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 58, 40.200000762939, -2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -74, 0.20000076293945, 98)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -18)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -32.100006103516, 63.600006103516, -34.000015258789)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 24.200000762939, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -38)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 62, 36.200000762939, -6)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -6, 12.200000762939, 86)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 78)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -18, 28.200000762939, 70)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 64.200004577637, -34)Auto_Biud_Base(52, -0, 0, -0, -46, 52.199996948242, -30)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -14)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 82.000061035156, 19.599998474121, 2.8999938964844)Auto_Biud_Base(52, -0, 0, -0, -30, 68.200004577637, -2)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 62, 16.200000762939, -82)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 40.100006103516, 58.100006103516, 38)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -74, 12.200000762939, -86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 66, 16.200000762939, 82)Auto_Biud_Base(52, -0, 0, -0, -74, 24.200000762939, -22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 98, 0.20000076293945, -66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 36.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 48.199996948242, -50)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 60.199996948242, 38)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 50, 26.099998474121, 72.100006103516)Auto_Biud_Base(52, -0, 0, -0, -78, 20.200000762939, 66)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 10, 52.199996948242, 46)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 70, 28.200000762939, -14)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 36.200000762939, 62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -18, 12.200000762939, -86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -82, 4.2000007629395, 94)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 20.200000762939, 78)Auto_Biud_Base(52, -0, 0, -0, -82, 16.200000762939, 74)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 90, 8.2000007629395, -78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -22, 28.200000762939, -70)Auto_Biud_Base(52, -0, 0, -0, -58, 40.200000762939, -34)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 94, 4.2000007629395, -74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -14, 52.199996948242, -46)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 38, 0.20000076293945, 98)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 50, 48.199996948242, -30)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 22, 8.2000007629395, -90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 78, 20.200000762939, 34)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -50, 32.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 34, 12.200000762939, -86)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 82, 8.2000007629395, -90)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 42, 56.199996948242, -22)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 0.20000076293945, -98)Auto_Biud_Base(52, -0, 0, -0, -26, 72.200004577637, 2)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 20.200000762939, 78)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 10, 16.200000762939, -82)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -2, 88.200004577637, -10)Auto_Biud_Base(19, -1.5707963705063, 0, -3.1415927410126, 96.999938964844, 19.599998474121, 5.1000061035156)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -34, 16.200000762939, -82)Auto_Biud_Base(1, -0, -0, -1.5707963705063, 88.100006103516, 18.100059509277, -19.5)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -62, 12.200000762939, -86)Auto_Biud_Base(52, -0, 0, -0, -86, 12.200000762939, 22)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 14, 60.199996948242, 38)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -22)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 54, 44.200000762939, -22)Auto_Biud_Base(52, -0, 0, -0, -70, 28.200000762939, -26)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -62)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -70, 16.200000762939, -82)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -46, 28.200000762939, 70)Auto_Biud_Base(52, -0, 0, -0, -94, 4.2000007629395, 90)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -58, 32.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 48.199996948242, -50)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 34, 64.200004577637, 10)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -22, 68.200004577637, 30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 2, 68.200004577637, 30)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, -14)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 18, 68.200004577637, -30)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -2, 40.200000762939, 58)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -10, 36.200000762939, -62)Auto_Biud_Base(52, 0, 1.5707963705063, 0, 90, 4.2000007629395, 94)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 74, 24.200000762939, -66)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 56.199996948242, -42)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 82, 16.200000762939, 74)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 6, 12.200000762939, -86)Auto_Biud_Base(52, 0, 1.5707963705063, 0, -14, 40.200000762939, 58)Auto_Biud_Base(52, -3.1415927410126, 0, -3.1415927410126, 66, 32.200000762939, 18)Auto_Biud_Base(52, 3.1415927410126, -0, 1.5707963705063, -20.100006103516, 78.099998474121, 10)Auto_Biud_Base(52, -0, 0, -0, -90, 8.2000007629395, 50)Auto_Biud_Base(52, 1.5707963705063, -1.5707963705063, 0, 26, 46.100006103516, 52.100006103516)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -58, 4.2000007629395, -94)Auto_Biud_Base(52, -0, -1.5707963705063, 0, 38, 20.200000762939, -78)Auto_Biud_Base(1, -1.5707963705063, -0, -0, 82.000061035156, 19.599998474121, -5.1000061035156)Auto_Biud_Base(52, -0, 0, -0, -98, 0.20000076293945, 50)Auto_Biud_Base(52, -0, -0, -1.5707963705063, 56.100006103516, 42.100002288818, 54)Auto_Biud_Base(52, -0, -1.5707963705063, 0, -82, 12.200000762939, -86)Auto_Biud_Base(52, -0, 0, -0, -62, 36.200000762939, -42)Auto_Biud_Base(52, -0, 0, -0, -18, 80.200004577637, 10)Auto_Biud_Base(11, 1.5707963705063, 0, 1.5707963705063, -12.100006103516, 83.599998474121, -14.000015258789)Auto_Biud_Base(52, -0, 0, -0, -10, 88.200004577637, 6)notify("白","建造完毕",4)wait(0.5)Gray() end)local Players = Sectionfutougn:Dropdown("选择玩家",'Dropdown',bai.dropdown,function(v)    bai.ftgnwj= vend)Sectionfutougn:Button("重置玩家名称", function()	shuaxinlb(true)	Players:SetOptions(bai.dropdown)end)Sectionfutougn:Button("传送到玩家旁边",function()    local HumRoot = game.Players.LocalPlayer.Character.HumanoidRootPart    local tp_player = game:GetService("Players")[bai.ftgnwj]    if tp_player then        for i = 1,5 do            wait()            HumRoot.CFrame = tp_player.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)        end    endend)Sectionfutougn:Button("传送到玩家基地", function()	local ME = game.Players.LocalPlayer.Character.HumanoidRootPart	for i,v in pairs(game.Workspace.Properties:GetChildren()) do        if v.Owner.Value == game.Players[bai.ftgnwj] then			ME.CFrame = v.OriginSquare.CFrame + Vector3.new(0,10,0)        end    endend)Sectionfutougn:Button("汽车传送到玩家旁边", function()	local tp_player = game:GetService("Players")[bai.ftgnwj]       if tp_player then                  		carTeleport(tp_player.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0))                 	endend)Sectionfutougn:Button("汽车传送到玩家基地", function()		for i,v in pairs(game.Workspace.Properties:GetChildren()) do        if v.Owner.Value == game.Players[bai.ftgnwj] then     		carTeleport( v.OriginSquare.CFrame + Vector3.new(0,10,0))         end    endend)Sectionfutougn:Button("斧头踢人",function()	kickPlayer(game:GetService("Players")[bai.ftgnwj])end)Sectionfutougn:Button("斧头杀人",function()	local tool = getTool()	if not tool then	  return notify("白","你需要斧头",4)	end   local KillPlayer=bai.ftgnwj		local Player = gplr(KillPlayer)				if Player[1] then			Player = Player[1]		local	  LocalPlayer = game.Players.LocalPlayer				 if LocalPlayer.Character.PrimaryPart ~= nil then					local Character = LocalPlayer.Character					local previous = LocalPlayer.Character.PrimaryPart.CFrame									Character.Archivable = true					local Clone = Character:Clone()					LocalPlayer.Character = Clone					wait(0.5)					LocalPlayer.Character = Character					wait(0.2)										if LocalPlayer.Character and Player.Character and Player.Character.PrimaryPart ~= nil then						if LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then							LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):Destroy()						end								local Humanoid = Instance.new("Humanoid")						Humanoid.Parent = LocalPlayer.Character								local Tool = nil								if LocalPlayer.Character:FindFirstChildOfClass("Tool") then							Tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")						elseif LocalPlayer.Backpack and LocalPlayer.Backpack:FindFirstChildOfClass("Tool") then							Tool = LocalPlayer.Backpack:FindFirstChildOfClass("Tool")						end												if Tool ~= nil then							Tool.Parent = LocalPlayer.Backpack														Player.Character.HumanoidRootPart.Anchored = true														local Arm = game.Players.LocalPlayer.Character['Right Arm'].CFrame * CFrame.new(0, -1, 0, 1, 0, 0, 0, 0, 1, 0, -1, 0)							Tool.Grip = Arm:ToObjectSpace(Player.Character.PrimaryPart.CFrame):Inverse()														Tool.Parent = LocalPlayer.Character							Workspace.CurrentCamera.CameraSubject = Tool.Handle				  							repeat								wait()							until not Tool or Tool and (Tool.Parent == Workspace or Tool.Parent == Player.Character)							Player.Character.HumanoidRootPart.Anchored = false							wait(0.1)							Humanoid.Health = 0							LocalPlayer.Character = nil						end					end		 					spawn(function()					LocalPlayer.CharacterAdded:Wait()					Player.Character.HumanoidRootPart.Anchored = false					if Player.Character.Humanoid.Health <= 15 then					notify("白","成功",4)					repeat wait() until LocalPlayer.Character.PrimaryPart ~= nil					wait(0.4)					LocalPlayer.Character:SetPrimaryPartCFrame(previous)					end			   end)		   end		endend)Sectionfutougn:Button("斧头带人",function()	Target = bai.ftgnwj	local tool = getTool()	if not tool then	  return notify("白","你需要斧头",4)	end				NOW = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame			game.Players.LocalPlayer.Character.Humanoid.Name = 1		local l = game.Players.LocalPlayer.Character["1"]:Clone()		l.Parent = game.Players.LocalPlayer.Character		l.Name = "Humanoid"		wait(0.1)		game.Players.LocalPlayer.Character["1"]:Destroy()		game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character		game.Players.LocalPlayer.Character.Animate.Disabled = true		wait(1.1)		game.Players.LocalPlayer.Character.Animate.Disabled = false		game.Players.LocalPlayer.Character.Humanoid.DisplayDistanceType = "None"		for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do			if v.Name:sub(1, 4) == "Tool" then				game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)			end		end		local function tp(player,player2)		local char1,char2=player.Character,player2.Character		if char1 and char2 then		char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame		end		end		local function getout(player,player2)		local char1,char2=player.Character,player2.Character		if char1 and char2 then		char1:MoveTo(char2.Head.Position)		end		end		tp(game.Players[Target], game.Players.LocalPlayer)		wait(0.1)		tp(game.Players[Target], game.Players.LocalPlayer)		wait(0.3)		tp(game.Players[Target], game.Players.LocalPlayer)		wait(0.3)	fori=1,60 do			getout(game.Players.LocalPlayer, game.Players[Target])				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = NOW			task.wait(.1)	endend)Sectionfutougn:Button("岩浆杀人",function()	local tool = getTool()	if not tool then	  return notify("白","你需要斧头",4)	end			Target = bai.ftgnwj		NOW = CFrame.new(-1685,200,1216)		game.Players.LocalPlayer.Character.Humanoid.Name = 1		local l = game.Players.LocalPlayer.Character["1"]:Clone()		l.Parent = game.Players.LocalPlayer.Character		l.Name = "Humanoid"		wait(0.1)		game.Players.LocalPlayer.Character["1"]:Destroy()		game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character		game.Players.LocalPlayer.Character.Animate.Disabled = true		wait(1.1)		game.Players.LocalPlayer.Character.Animate.Disabled = false		game.Players.LocalPlayer.Character.Humanoid.DisplayDistanceType = "None"		for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do			if v.Name:sub(1, 4) == "Tool" then				game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)			end		end		local function tp(player,player2)		local char1,char2=player.Character,player2.Character		if char1 and char2 then		char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame		end		end		local function getout(player,player2)		local char1,char2=player.Character,player2.Character		if char1 and char2 then		char1:MoveTo(char2.Head.Position)		end		end		wait(0.1)		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = NOW		tp(game.Players[Target], game.Players.LocalPlayer)		wait(0.1)		tp(game.Players[Target], game.Players.LocalPlayer)		wait(0.3)		tp(game.Players[Target], game.Players.LocalPlayer)	fori=1,20 do			getout(game.Players.LocalPlayer, game.Players[Target])				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = NOW	end					end)Sectionfutougn:Button("虚空搞人", function()	local tool = getTool()	if not tool then	  return notify("白","你需要斧头",4)	end		Target = bai.ftgnwj		NOW = CFrame.new(9e9,9e9,9e9)			game.Players.LocalPlayer.Character.Humanoid.Name = 1		local l = game.Players.LocalPlayer.Character["1"]:Clone()		l.Parent = game.Players.LocalPlayer.Character		l.Name = "Humanoid"		wait(0.1)		game.Players.LocalPlayer.Character["1"]:Destroy()		game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character		game.Players.LocalPlayer.Character.Animate.Disabled = true		wait(1.1)		game.Players.LocalPlayer.Character.Animate.Disabled = false		game.Players.LocalPlayer.Character.Humanoid.DisplayDistanceType = "None"		for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do			if v.Name:sub(1, 4) == "Tool" then				game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)			end		end		local function tp(player,player2)		local char1,char2=player.Character,player2.Character		if char1 and char2 then		char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame		end		end		local function getout(player,player2)		local char1,char2=player.Character,player2.Character		if char1 and char2 then		char1:MoveTo(char2.Head.Position)		end		end		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = NOW		wait(0.1)		tp(game.Players[Target], game.Players.LocalPlayer)		wait(0.1)		tp(game.Players[Target], game.Players.LocalPlayer)		wait(0.3)		tp(game.Players[Target], game.Players.LocalPlayer)	for i=1,20 do			getout(game.Players.LocalPlayer, game.Players[Target])				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = NOW	end					end)Sectionfutougn:Button("飞玩家", function()	Target = bai.ftgnwj	local tool = getTool()	if not tool then	  return notify("白","你需要斧头",4)	end				NOW = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame		local hrp = lp.Character.HumanoidRootPart		game.Players.LocalPlayer.Character.Humanoid.Name = 1		local l = game.Players.LocalPlayer.Character["1"]:Clone()		l.Parent = game.Players.LocalPlayer.Character		l.Name = "Humanoid"		wait(0.1)		game.Players.LocalPlayer.Character["1"]:Destroy()		game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character		game.Players.LocalPlayer.Character.Animate.Disabled = true		wait(1.1)		game.Players.LocalPlayer.Character.Animate.Disabled = false		game.Players.LocalPlayer.Character.Humanoid.DisplayDistanceType = "None"		for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do			if v.Name:sub(1, 4) == "Tool" then				game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)			end		end		local function tp(player,player2)		local char1,char2=player.Character,player2.Character		if char1 and char2 then		char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame		end		end		local function getout(player,player2)		local char1,char2=player.Character,player2.Character		if char1 and char2 then		char1:MoveTo(char2.Head.Position)		end		end		local mag = 1000		hrp.Velocity = Vector3.new(mag,mag,mag)		hrp.RotVelocity = Vector3.new(mag,mag,mag)		wait(0.2)		tp(game.Players[Target], game.Players.LocalPlayer)		wait(0.1)				tp(game.Players[Target], game.Players.LocalPlayer)		wait(0.3)		tp(game.Players[Target], game.Players.LocalPlayer)		wait(0.3)			for  i=1,20 do			getout(game.Players.LocalPlayer, game.Players[Target])				end	end)	getgenv().oldHooks = {} getgenv().oldHooks.namecall = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)  if getnamecallmethod() == "Kick" then    return wait(9e9)  end  if tostring(self) == "Ban" or tostring(self) == "AddLog" then    return true  end   return oldHooks.namecall(self, ...)end))